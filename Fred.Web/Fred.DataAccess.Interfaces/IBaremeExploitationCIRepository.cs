
using Fred.Entities.Bareme;
using System;
using System.Collections.Generic;

namespace Fred.DataAccess.Interfaces

{
    /// <summary>
    ///   Référentiel de données pour les barèmes exploitation CI.
    /// </summary>
    public interface IBaremeExploitationCIRepository : IRepository<BaremeExploitationCIEnt>
    {
        /// <summary>
        /// Retourne la liste des barèmes en fonction d'une période et d'un CI.
        /// </summary>
        /// <param name="periode">Periode</param>
        /// <param name="ciId">Identifiant du CI</param>
        /// <returns>Liste de baremes CI</returns>
        List<BaremeExploitationCIEnt> GetBaremeByCIIdAndPeriode(DateTime periode, int ciId);

        /// <summary>
        /// Retourne la liste des barèmes en fonction d'un CI.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <returns>Liste de baremes CI</returns>
        List<BaremeExploitationCIEnt> GetBaremeByCIId(int ciId);

        /// <summary>
        /// Retourne un barème s'il existe, sinon null.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <param name="periode">Période</param>
        /// <param name="referentielEtenduId">Identifiant du référentiel étendu</param>
        /// <returns>Le barème ou null s'il n'existe pas</returns>
        BaremeExploitationCIEnt Get(int ciId, DateTime periode, int referentielEtenduId);

        IReadOnlyList<BaremeExploitationCIEnt> Get(int ciId, DateTime periode, List<int> referentielEtenduIds);

        /// <summary>
        /// Retourne un barème s'il existe, sinon null.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <param name="referentielEtenduId">Identifiant du référentiel étendu</param>
        /// <returns>Le barème ou null s'il n'existe pas</returns>
        BaremeExploitationCIEnt Get(int ciId, int referentielEtenduId);

        /// <summary>
        /// Retourne la période de début du barème courant ou null s'il n'y en a pas.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <returns>La période de début du barème courant ou null s'il n'y en a pas</returns>
        DateTime? GetPeriodeDebutBaremeCourant(int ciId);

        /// <summary>
        /// Retourne un barème non clôturé s'il existe, sinon null.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <param name="periode">Période</param>
        /// <param name="referentielEtenduId">Identifiant du référentiel étendu</param>
        /// <returns>Le barème ou null s'il n'existe pas</returns>
        BaremeExploitationCIEnt GetUnclosed(int ciId, DateTime periode, int referentielEtenduId);

        /// <summary>
        /// Enregistre des barèmes
        /// </summary>
        /// <param name="listBareme">Liste de barèmes</param>
        void SaveListBareme(List<BaremeExploitationCIEnt> listBareme);

        /// <summary>
        /// Supprime la liste de barèmes de la base
        /// </summary>
        /// <param name="listBaremes">Liste des barèmes à supprimer</param>
        void DeleteListBareme(List<BaremeExploitationCIEnt> listBaremes);

        /// <summary>
        /// Retourne la date de début du barème ouvert (en cours)
        /// </summary>
        /// <param name="periode">Période</param>
        /// <param name="ciId">Identifiant du CI</param>
        /// <returns>La date de début du barème ouvert (en cours)</returns>
        DateTime? GetBeginPeriodOfOpenedBareme(DateTime periode, int ciId);

        /// <summary>
        /// Clos les barèmes de la dernière période ouverte
        /// </summary>
        /// <param name="periode">Période</param>
        /// <param name="ciId">Identifiant du CI</param>
        void CloseLastPeriod(DateTime periode, int ciId);

        /// <summary>
        /// Retourne un barème commencant à la période indiqué s'il existe, sinon null.
        /// </summary>
        /// <param name="ciId">Identifiant du CI</param>
        /// <param name="beginPeriod">Période de début</param>
        /// <param name="referentielEtenduId">Identifiant du référentiel étendu</param>
        /// <returns>Le barème ou null s'il n'existe pas</returns>
        BaremeExploitationCIEnt GetByBeginPeriod(int ciId, DateTime beginPeriod, int referentielEtenduId);

        /// <summary>
        /// Retourne l'historique d'une ressource.
        /// </summary>
        /// <param name="ciId">L'identifiant du CI</param>
        /// <param name="referentielEtenduId">L'identifiant de la ressource</param>
        /// <returns>L'historique de la ressource</returns>
        List<BaremeExploitationCIEnt> GetHistorique(int ciId, int referentielEtenduId);
    }
}
