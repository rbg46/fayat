<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fred.Framework</name>
    </assembly>
    <members>
        <member name="T:Fred.Framework.Cache.WaitToFinishMemoryCache">
            <summary>
            Permet de recuperer un element du cache
            Un mutex stop les threads qui essaieraient d'exectuter la fonction de creation de l'item en meme temps
            </summary>
        </member>
        <member name="M:Fred.Framework.Cache.WaitToFinishMemoryCache.GetOrCreate``1(System.String,System.Func{``0},System.TimeSpan)">
            <summary>
            Recupere la valeur du cache ou execute la fonction 'createItem'
            </summary>
            <param name="cacheKey">La cle du cache</param>
            <param name="createItem">la fonction de creation de l'item</param>
            <param name="absoluteExpiration">La date absolue d'expiration</param>
            <typeparam name="TItem">Type de retour du cache</typeparam>
            <returns>Le type de retour de la creation de l'item</returns>
        </member>
        <member name="T:Fred.Framework.Comparers.CustomAlphanumericComparer">
            <summary>
                Compare une liste contenant des chaines de caractères dont certaines sont numériques        
            </summary>
            <example>
                input = ["80", "A", "95", "K", "C", "100", "F", "00", "010", "01", "3000", "060", "ED10", "A10", "A11", "B01", "B010", "60"]
                output = ["A", "A10", "A11", "B01", "B010", "C", "ED10", "F", "K", "00", "01", "010", "060", "60", "80", "95", "100", "3000"]
            </example>
        </member>
        <member name="M:Fred.Framework.Comparers.CustomAlphanumericComparer.Compare(System.String,System.String)">
            <summary>
                Comparaison de deux chaines
            </summary>
            <param name="x">Chaine 1</param>
            <param name="y">Chaine 2</param>
            <returns>Ordre</returns>
        </member>
        <member name="T:Fred.Framework.CompteExploitationExcelHelper">
            <summary>
              Helper du manager explorateur de dépenses
            </summary>
        </member>
        <member name="M:Fred.Framework.CompteExploitationExcelHelper.GetFormatedExcelRange(System.String,System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Renvoie la chaine Excel d'une "Range"
            correction formatée
            </summary>
            <param name="colStart">Lettre colonne début</param>
            <param name="colEnd">Lettre colonne fin</param>
            <param name="startRowNum">Num ligne de départ</param>
            <param name="endRowNum">Num ligne de fin</param>
            <returns>La range formée</returns>
        </member>
        <member name="M:Fred.Framework.CompteExploitationExcelHelper.GetFormatedExcelRange(System.String,System.String,System.String,System.String)">
            <summary>
            Renvoie la chaine Excel d'une "Range"
            correction formatée
            </summary>
            <param name="colStart">Lettre colonne début</param>
            <param name="colEnd">Lettre colonne fin</param>
            <param name="startRowNum">Num ligne de départ</param>
            <param name="endRowNum">Num ligne de fin</param>
            <returns>La range formée</returns>
        </member>
        <member name="M:Fred.Framework.CompteExploitationExcelHelper.HandleSocieteLogoOnExcel(System.String,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Traitement des images logo de société pour forcer la hauteur et largeur selon l'image physique
            </summary>
            <param name="imagePath">Path Image Societe</param>
            <param name="worksheet">Worksheet Excel</param>
        </member>
        <member name="T:Fred.Framework.DateTimeExtend.DateTimeExt">
            <summary>
            Classe d'extension de DateTime
            </summary>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExt.GetLimitsOfMonth(System.DateTime)">
            <summary>
            Retourne les limites d'un mois
            </summary>
            <param name="month">date reference</param>
            <returns>MonthLimits</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExt.IsBusinessDay(System.DateTime,System.String)">
            <summary>
              Teste si la date passée en paramètre est un jour ouvré
            </summary>
            <param name="date">Date à tester</param>
            <param name="culture">culture exemple :fr-FR</param>
            <returns>Vrai si jour ouvré, sinon faux</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExt.GetHourDifference(System.DateTime,System.DateTime)">
            <summary>
            Retounrne la différence en heure entre la premiére et la deuxiéme heure
            </summary>
            <param name="startDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <returns>Différence en heure entre startDate et endDate</returns>
        </member>
        <member name="T:Fred.Framework.DateTimeExtend.IDateTimeExtendManager">
            <summary>
              La classe IDateTimeExtendManager sert à lire une valeur dans le fichier de configuration
            </summary>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.IsHoliday(System.DateTime)">
            <summary>
            Teste la date passé en paramètre, et évalue s'il s'agit d'un jour férié
            </summary>
            <param name="date">Date</param>
            <returns>Retourne vrai si la date est un jour férié</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.TestHoliday(System.DateTime,System.Globalization.CultureInfo,System.Boolean)">
            <summary>Obtient une valeur dans le fichier de configuration </summary>    
            <param name="periode">p</param>
            <param name="cultureInfo">c</param>
            <param name="isWeekPeriode">isWekPeriode</param>
            <returns>Liste de date</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.GetFirstDayOnPeriod(System.Int32,System.Int32)">
            <summary>
            Retourne le premier jour de la période
            </summary>
            <param name="year">Année</param>
            <param name="month">Mois</param>
            <returns>Premier jour du mois</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.GetLastDayOnPeriod(System.Int32,System.Int32)">
            <summary>
            Retourne le dernier jour de la période
            </summary>
            <param name="year">Année</param>
            <param name="month">Mois</param>
            <returns>Dernier jour du mois</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.IsBusinessDay(System.DateTime)">
            <summary>
              Teste si la date passée en paramètre est un jour ouvré (!samedi, !dimanche, !férié)
            </summary>
            <param name="date">Date à tester</param>
            <returns>Vrai si jour ouvré, sinon faux</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.CountHolidaysAndWeekends(System.DateTime,System.DateTime)">
            <summary>
              Obtient le nombre de jours non ouvrés dans une période
            </summary>
            <param name="start">Date de début</param>
            <param name="end">Date de fin</param>
            <returns>Nombre de jours non ouvrés</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.IsWeekend(System.DateTime)">
            <summary>
              Teste si la date passée en paramètre est un jour de weekend
            </summary>
            <param name="date">Date à tester</param>
            <returns>Vrai si jour de weekend, sinon faux</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.GetHolidays(System.Nullable{System.Int32})">
            <summary>
              Récupère la liste des jours fériés d'une année ou de l'année en cours et l'année suivante
            </summary>
            <param name="year">Année</param>
            <returns>Liste des jours fériés</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.IDateTimeExtendManager.GetWorkingDays(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Retourner la liste des jours ouvrés entre 2 dates 
            </summary>
            <param name="startDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="isHolidayCheck">True si on considére la vérification des jours fériés assuré par la méthode IsHoliday. False par défaut</param>
            <returns>List of DateTime</returns>
        </member>
        <member name="T:Fred.Framework.DateTimeExtend.MonthLimits">
            <summary>
            Wrap les limites d'un mois
            </summary>
        </member>
        <member name="P:Fred.Framework.DateTimeExtend.MonthLimits.StartDate">
            <summary>
            Date de debut
            </summary>
        </member>
        <member name="P:Fred.Framework.DateTimeExtend.MonthLimits.EndDate">
            <summary>
            Date de fin
            </summary>
        </member>
        <member name="T:Fred.Framework.DateTimeExtend.DateTimeExtend">
            <summary>
            DateTime étendu à l'aide de propriétés supplémentaires
            </summary>
        </member>
        <member name="P:Fred.Framework.DateTimeExtend.DateTimeExtend.Date">
            <summary>
            Obtient ou défini la date
            </summary>
        </member>
        <member name="P:Fred.Framework.DateTimeExtend.DateTimeExtend.IsHoliday">
            <summary>
            Obtient ou défini si la date est un jour de vacances
            </summary>
        </member>
        <member name="P:Fred.Framework.DateTimeExtend.DateTimeExtend.IsWeekend">
            <summary>
            Obtient ou défini si la date est un jour de weekend
            </summary>
        </member>
        <member name="T:Fred.Framework.DateTimeExtend.DateTimeExtendManager">
            <summary>
            Manager de DateTimeExtend
            </summary>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.IsHoliday(System.DateTime)">
            <summary>
            Teste la date passé en paramètre, et évalue s'il s'agit d'un jour férié
            </summary>
            <param name="date">Date</param>
            <returns>Retourne vrai si la date est un jour férié</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.IsBusinessDay(System.DateTime)">
            <summary>
              Teste si la date passée en paramètre est un jour ouvré
            </summary>
            <param name="date">Date à tester</param>
            <returns>Vrai si jour ouvré, sinon faux</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.IsWeekend(System.DateTime)">
            <summary>
              Teste si la date passée en paramètre est un jour de weekend
            </summary>
            <param name="date">Date à tester</param>
            <returns>Vrai si jour de weekend, sinon faux</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.CountHolidaysAndWeekends(System.DateTime,System.DateTime)">
            <summary>
              Obtient le nombre de jours non ouvrés dans une période
            </summary>
            <param name="start">Date de début</param>
            <param name="end">Date de fin</param>
            <returns>Nombre de jours non ouvrés</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.GetHolidays(System.Nullable{System.Int32})">
            <summary>
              Récupère la liste des jours fériés d'une année ou de l'année en cours et l'année suivante
            </summary>
            <param name="year">Année</param>
            <returns>Liste des jours fériés</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.TestHoliday(System.DateTime,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Calcul les jours fériés et de weekend pour une période et une culture passé en paramètre
            </summary>
            <param name="periode">Période mensuel</param>
            <param name="cultureInfo">Culture</param>
            <param name="isWeekPeriode">isWeekPeriode</param>
            <returns>Retourne la liste des jours de la période passé en paramètres</returns>
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.GetFirstDayOnPeriod(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.GetLastDayOnPeriod(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Fred.Framework.DateTimeExtend.DateTimeExtendManager.GetWorkingDays(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Retourner la liste des jours ouvrés entre 2 dates 
            </summary>
            <param name="startDate">Date de début</param>
            <param name="endDate">Date de fin</param>
            <param name="isHolidayCheck">True si on considére la vérification des jours fériés assuré par la méthode IsHoliday. False par défaut</param>
            <returns>List of DateTime</returns>
        </member>
        <member name="T:Fred.Framework.Debugger.CompareResult">
            <summary>
            Resultat d'une comparaison
            </summary>
        </member>
        <member name="P:Fred.Framework.Debugger.CompareResult.Source">
            <summary>
            La source
            </summary>
        </member>
        <member name="P:Fred.Framework.Debugger.CompareResult.Target">
            <summary>
            La cible
            </summary>
        </member>
        <member name="P:Fred.Framework.Debugger.CompareResult.IsEqual">
            <summary>
            Dit si le resultat est identique
            </summary>
        </member>
        <member name="P:Fred.Framework.Debugger.CompareResult.Index">
            <summary>
            L'index de l'operation
            </summary>
        </member>
        <member name="T:Fred.Framework.Debugger.DebugComparator">
            <summary>
            Permet de comparer 2 objects
            </summary>
        </member>
        <member name="M:Fred.Framework.Debugger.DebugComparator.Compare(System.Object,System.Object)">
            <summary>
             Permet de comparer 2 objects
            </summary>
            <param name="sourceObject">source</param>
            <param name="targetObject">target</param>
            <returns>Les diffs</returns>
        </member>
        <member name="M:Fred.Framework.Debugger.DebugComparator.CompareSerialized(System.Object,System.Object)">
            <summary>
            Compare le 2 object en les serialisant
            </summary>
            <param name="sourceObject">la source </param>
            <param name="targetObject">la cible </param>
            <returns>le resultat de la comparaison</returns>
        </member>
        <member name="M:Fred.Framework.Debugger.DebugComparator.WatchMany``1(System.String,System.Func{``0},System.Func{``0},System.Action{System.String})">
            <summary>
            Log le temps d'execution d'une fonction
            </summary>
            <typeparam name="T">Le type de retour de la fonction a monitorer</typeparam>
            <param name="methodeName">Le nom de la methode</param>
            <param name="newFunctionToWatch"> la nouvelle fonction a monitorer</param>
            <param name="oldfunctionToWatch"> l'ancienne fonction a monitorer</param>
            <param name="logAction">La fonction de log</param>
            <returns>Le retour de la fonction</returns>
        </member>
        <member name="M:Fred.Framework.Debugger.DebugComparator.Watch``1(System.String,System.String,System.Func{``0},System.Action{System.String})">
            <summary>
            Log le temps d'execution d'une fonction
            </summary>
            <typeparam name="T">Le type de retour de la fonction a monitorer</typeparam>
            <param name="methodeName">Le nom de la methode</param>
            <param name="prefixResult">info dans log</param>
            <param name="functionToWatch"> la fonction a monitorer</param>
            <param name="logAction">La fonction de log</param>
            <returns>Le retour de la fonction</returns>
        </member>
        <member name="M:Fred.Framework.Debugger.DebugComparator.Concatenate``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            Helper pour concater une liste en chaione de caractere
            </summary>
            <typeparam name="T">type T</typeparam>
            <param name="source">La liste</param>
            <param name="delimiter">le delimiter</param>
            <returns>La liste en chaine de caractere</returns>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredBusinessConflictException">
            <summary>
            Excetion pour gérer le conflict d'une donnée déjà existante
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessConflictException.#ctor(System.String)">
            <summary>
            FredBusinessConflictException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessConflictException.#ctor(System.String,System.Exception)">
            <summary>
            FredBusinessConflictException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessConflictException.#ctor(System.String,System.Object)">
            <summary>
            FredBusinessConflictException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessConflictException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredBusinessConflictException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredBusinessConflictException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredBusinessMessageResponseException">
            <summary>
            Représente une exception de type métier qui sera renvoyée au front via un message et non via la méthode classique.
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessMessageResponseException.#ctor(System.String)">
            <summary>
            FredBusinessMessageResponseException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessMessageResponseException.#ctor(System.String,System.Exception)">
            <summary>
            FredBusinessMessageResponseException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessMessageResponseException.#ctor(System.String,System.Object)">
            <summary>
            FredBusinessMessageResponseException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessMessageResponseException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredBusinessMessageResponseException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessMessageResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredBusinessMessageResponseException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredBusinessNotFoundException">
            <summary>
            Excetion pour gérer le notfound
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessNotFoundException.#ctor(System.String)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessNotFoundException.#ctor(System.String,System.Object)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessNotFoundException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredRepositoryException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredException">
            <summary>
              Base class for all custom exception in Fred
              Will be automaticaly logged with
              - the message if not empty
              - the inner exception(s) recursively if not null
              - the objectToDump if not null
            </summary>
            <example>
              Client code :
              throw new FredBusinessException("Sample", entity, originalException);
              Catch code :
              catch (FredBusinessException ex)
              {
              ex.LogException();
              do some error handling
              }
            </example>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor">
            <summary>
            Il est interdit de créer une exception sans paramètre
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor(System.String)">
            <summary>
              Initialise une nouvelle instance de FredException pour la gestion des erreurs
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor(System.String,System.Exception)">
            <summary>
              Initialise une nouvelle instance de classe pour la gestion des erreurs
              message and a reference to the inner exception that is the cause of this exception. <see cref="T:Fred.Framework.Exceptions.FredException" />
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
              The exception that is the cause of the current exception, or a null reference
              (Nothing in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor(System.String,System.Object)">
            <summary>
              Initialise une nouvelle instance de classe pour la gestion des erreurs
              message and a reference to an object witch properties will be dump to log. <see cref="T:Fred.Framework.Exceptions.FredException" />
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="objectToDump">
              Properties of this object will be dump to log
              Usefull if you want to log informations about an object for debugging purpose
            </param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
              Initialise une nouvelle instance de classe pour la gestion des erreurs
              message and a reference to an object witch properties will be dump to log. <see cref="T:Fred.Framework.Exceptions.FredException" />
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="objectToDump">
              Properties of this object will be dump to log
              Usefull if you want to log informations about an object for debugging purpose
            </param>
            <param name="innerException">
              The exception that is the cause of the current exception, or a null reference
              (Nothing in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Without this constructor, deserialization will fail
            </summary>
            <param name="info">info</param>
            <param name="context">context</param>
        </member>
        <member name="P:Fred.Framework.Exceptions.FredException.ObjectToDump">
            <summary>
              All the properties of this object will be dump
            </summary>
            <value>
              The object to dump.
            </value>
        </member>
        <member name="P:Fred.Framework.Exceptions.FredException.Service">
            <summary>
              Service dans lequel est généré l'exception
            </summary>
            <value>
              The service.
            </value>
        </member>
        <member name="P:Fred.Framework.Exceptions.FredException.UserLogin">
            <summary>
              Utilisateur
            </summary>
            <value>
              The user login.
            </value>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Override GetObjectData() and make sure you call through to base.GetObjectData(info, context) at the end,
              in order to let the base class save its own state.
            </summary>
            <param name="info">info</param>
            <param name="context">context</param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredBadGatewayException">
            <summary>
            Excetion pour gérerles BadGateway
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBadGatewayException.#ctor(System.String)">
            <summary>
            FredBadGatewayException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBadGatewayException.#ctor(System.String,System.Exception)">
            <summary>
            FredBadGatewayException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBadGatewayException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Without this constructor, deserialization will fail
            </summary>
            <param name="info">info</param>
            <param name="context">context</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBadGatewayException.#ctor(System.String,System.Object)">
            <summary>
            FredBadGatewayException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBadGatewayException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredBadGatewayException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredRepositoryNotFoundException">
            <summary>
              Exception lancée par un repository lorsqu'il ne trouve pas un objet
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryNotFoundException.#ctor(System.String)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryNotFoundException.#ctor(System.String,System.Object)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryNotFoundException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredRepositoryException">
            <summary>
              Classe de base pour toute exception de type Repository
              Si pertinant, dérivez la classe pour créer votre propre exception
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryException.#ctor(System.String)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryException.#ctor(System.String,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryException.#ctor(System.String,System.Object)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredRepositoryNotFoundException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredRepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredRepositoryException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredTechnicalException">
            <summary>
              Classe de base pour toute exception de type technique
              Si pertinant, dérivez la classe pour créer votre propre exception
            </summary>
            <seealso cref="T:Fred.Framework.Exceptions.FredException" />
        </member>
        <member name="M:Fred.Framework.Exceptions.FredTechnicalException.#ctor(System.String)">
            <summary>
            FredTechnicalException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredTechnicalException.#ctor(System.String,System.Exception)">
            <summary>
            FredTechnicalException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">InnerException</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredTechnicalException.#ctor(System.String,System.Object)">
            <summary>
            FredTechnicalException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">objectToDump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredTechnicalException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredTechnicalException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">objectToDump</param>
            <param name="innerException">innerException</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredTechnicalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredTechnicalException
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.FredBusinessException">
            <summary>
              Classe de base pour toute exception de type métier
              Si pertinant, dérivez la classe pour créer votre propre exception 
            </summary>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessException.#ctor(System.String)">
            <summary>
            FredBusinessException
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessException.#ctor(System.String,System.Exception)">
            <summary>
            FredBusinessException
            </summary>
            <param name="message">Message</param>
            <param name="innerException">InnerException</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessException.#ctor(System.String,System.Object)">
            <summary>
            FredBusinessException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            FredBusinessException
            </summary>
            <param name="message">Message</param>
            <param name="objectToDump">Object to Dump</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Fred.Framework.Exceptions.FredBusinessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            FredBusinessException
            </summary>
            <param name="info"><see cref="T:Fred.Framework.Exceptions.FredBusinessException"/></param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/></param>
        </member>
        <member name="T:Fred.Framework.Exceptions.IFredMessageResponseException">
            <summary>
            Représente une exception qui sera renvoyée au front via un message et non via la méthode classique.
            </summary>
        </member>
        <member name="P:Fred.Framework.Export.Order.Models.CommandeExportModel.MontantBlocHT">
            <summary>
              Obtient ou définit Montant HT par bloc (= montant initiale commande / montant avenant 1 / ...)
            </summary>
        </member>
        <member name="P:Fred.Framework.Export.Order.Models.CommandeExportModel.InfosSociete">
            <summary>
            Informations de la société à afficher en pieds de page
            </summary>
        </member>
        <member name="P:Fred.Framework.Export.Order.Models.CommandeExportModel.AvenantNumero">
            <summary>
            Le numéro d'avenant ou null s'il ne s'agit pas d'un avenant.
            </summary>
        </member>
        <member name="P:Fred.Framework.Export.Order.Models.CommandeLigneExportModel.AvenantNumero">
            <summary>
            Le numéro d'avenant ou null s'il s'agit d'une ligne de commande.
            </summary>
        </member>
        <member name="T:Fred.Framework.Extensions.DateTimeExtensions">
            <summary>
              Extension du type <see cref="T:System.DateTime" />.
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.GetPeriode(System.DateTime)">
            <summary>
            Retourne la période d'une date.
            La date retournée sera le 1er jour du mois et de l'année de la date passée en paramètre.
            </summary>
            <param name="date">Date concernée</param>
            <returns>La période de la date</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.TransformDateTimeRangeToDateRange(System.Nullable{System.DateTime}@,System.Nullable{System.DateTime}@)">
            <summary>
            Transforme un intervalle de datetime en intervalle de date
            </summary>
            <param name="dateFrom">Date de début d'intervalle</param>
            <param name="dateTo">Date de fin d'intervalle</param>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.ToStartDate(System.DateTime)">
            <summary>
            Renvoie le datetime en tant que date de début de période (sans la partie time)
            </summary>
            <param name="startDateTime">Date de début</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.ToEndDate(System.DateTime)">
            <summary>
            Renvoie le datetime en tant que date de fin de période (sans la partie time)
            </summary>
            <param name="endDateTime">Date de fin</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.IsSamePeriode(System.DateTime,System.DateTime)">
            <summary>
            Indique si la période de la date est identique à une autre.
            </summary>
            <param name="date">Date concernée</param>
            <param name="other">Date à comparer</param>
            <returns>True si la période de la date est identique à l'autre, sinon false</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.IsOlderPeriode(System.DateTime,System.DateTime)">
            <summary>
            Indique si la période de la date est antérieure à une autre.
            </summary>
            <param name="date">Date concernée</param>
            <param name="other">Date à comparer</param>
            <returns>True si la période de la date est antérieure à l'autre, sinon false</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.IsOlderOrSamePeriode(System.DateTime,System.DateTime)">
            <summary>
            Indique si la période de la date est antérieure ou identique à une autre.
            </summary>
            <param name="date">Date concernée</param>
            <param name="other">Date à comparer</param>
            <returns>True si la période de la date est antérieure ou identique à l'autre, sinon false</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.GetNextPeriode(System.DateTime)">
            <summary>
            Retourne la période suivante d'une date.
            La date retournée sera le 1er jour du mois et de l'année suivant la période passée en paramètre.
            </summary>
            <param name="date">Date concernée</param>
            <returns>La période de la date</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DateTimeExtensions.GetPreviousPeriode(System.DateTime)">
            <summary>
            Retourne la période suivante d'une date.
            La date retournée sera le 1er jour du mois et de l'année suivant la période passée en paramètre.
            </summary>
            <param name="date">Date concernée</param>
            <returns>La période de la date</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.DbUpExtension.FileSearchOrder">
            <summary>
            The order in which scripts are executed. 
            If set to Filename, scripts can be organized in different folders while still controlling execution order by their filenames. 
            If set to File Path, scripts are strictly sorted on their complete path. 
            If set to Folder Structure, scripts are executed in the order of the file system provider, 
            which means one folder at the time starting with the files in each folder and then working its way through each subfolder. 
            All scripts are executed in ascending order.
            </summary>
        </member>
        <member name="F:Fred.Framework.Extensions.DbUpExtension.FileSearchOrder.Filename">
            <summary>
             Tri les fichiers par leur nom
            </summary>
        </member>
        <member name="F:Fred.Framework.Extensions.DbUpExtension.FileSearchOrder.FilePath">
            <summary>
            Tri les fichiers par le nom complet
            </summary>
        </member>
        <member name="F:Fred.Framework.Extensions.DbUpExtension.FileSearchOrder.FolderStructure">
            <summary>
            Tri les fichiers en suivant la structure des répertoires
            </summary>
        </member>
        <member name="T:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions">
            <summary>
            Contient les options étendues : ajoute une option pour trier les fichiers
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="P:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions.IncludeSubDirectories">
            <summary>
            Si vrais, les sous-répertoires sont utilisés
            </summary>
        </member>
        <member name="P:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions.Order">
            <summary>
            Indique l'ordre de tri des fichiers 
            </summary>
        </member>
        <member name="P:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions.Filter">
            <summary>
            Fournie une fonction custom pour filtrer les fichiers
            Utile par exemple, pour filtrer les fichiers à jouer en fonction des environnements : dev/prod etc
            </summary>
        </member>
        <member name="P:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions.Encoding">
            <summary>
            Indique l'encodage des fichiers : UTF8 avec Bom.
            </summary>
        </member>
        <member name="T:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider">
            <summary>
            Alternate <see cref="T:DbUp.Engine.IScriptProvider"/> implementation which retrieves upgrade scripts via a directory
            This is a FileSystemScriptProvider inspired of that is implemented in  DbUp 4.0, with added ordering feature.
            Permet d'ajouter des fonctionnalités de tri mais aussi d'afficher le nom complet du fichier dans la base DbUp
            Credit : https://github.com/DbUp/DbUp/blob/release/4.0.0/src/dbup-core/ScriptProviders/FileSystemScriptProvider.cs
            Credit : https://github.com/johanclasson/vso-agent-tasks/blob/master/DbUpMigration/task/Update-DatabaseWithDbUp.ps1
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider.#ctor(System.String)">
            <summary>
            Create a new instance of FileSystemScriptProvider
            </summary>
            <param name="directoryPath">Path to SQL upgrade scripts</param>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider.#ctor(System.String,Fred.Framework.Extensions.DbUpExtension.FileSystemScriptOptions)">
            <summary>
            Create a new instance of FileSystemScriptProvider
            </summary>
            <param name="directoryPath">Path to SQL upgrade scripts</param>
            <param name="options">Fred custom option pour filtrer les fichiers.</param>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider.GetScripts(DbUp.Engine.Transactions.IConnectionManager)">
            <summary>
            Gets all scripts that should be executed.
            Options are applied
            </summary>
            <param name="connectionManager">DbUp connexion manager</param>
            <returns>Liste de fichier sql</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider.SqlScriptFromFile(System.IO.FileInfo)">
            <summary>
            Dbup retourne normalement le nom du fichier uniquement
            Ici on rajoute le chemin à partir duquel on fait la recherche
            Permet d'écrire le nom complet du fichier dans la base DbUp
            </summary>
            <param name="file">information sur la fichier</param>
            <returns>Fichier de type sql contenant le script</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DbUpExtension.FileSystemScriptProvider.ShouldSearchSubDirectories">
            <summary>
            Converti FileSystemScriptOptions.IncludeSubDirectories en System.Io.SearchOption
            </summary>
            <returns>System.Io.SearchOption</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.DoubleExtensions">
            <summary>
              Extension du type double
            </summary>
        </member>
        <member name="P:Fred.Framework.Extensions.DoubleExtensions.DefaultPrecision">
            <summary>
            Precision par défaut pour la compération de double
            Soit le nombre de chiffre après la virgule définissant le degrés d'erreur acceptable
            La valeur par défaut est 0.00001
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.ToEnglishString(System.Double)">
            <summary>
              Renvois un double au format Anglais
            </summary>
            <param name="value">Valeur à transformer</param>
            <returns>Retourne un double au format Anglais</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.Square(System.Double)">
            <summary>
              Caulcul la valeur au carré
            </summary>
            <param name="value">Valeur à transformer</param>
            <returns>retourne le carré de la valeur courante</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double)">
            <summary>
            Permet de vérifier si un double est équal (à peu prés!) à zéro 
            En effet, 0.33 n'est pas équal à 1/3...
            La précision par défaut est DefaultPrecision
            Pour une précision personalisée utilisez la fonction : <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double,System.Double)"/>
            voir: https://msdn.microsoft.com/fr-fr/library/ya2zha7s(v=vs.110).aspx
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <returns>Vrais si le double est très proche de zéro, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Nullable{System.Double})">
            <summary>
            voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <returns>Vrais si le double est très proche de zéro ou s'il n'y a pas de valeur, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double,System.Double)">
            <summary>
            Permet de vérifier si un double est équal (à peu prés!) à zéro 
            En effet, 0.33 n'est pas équal à 1/3...
            voir: https://msdn.microsoft.com/fr-fr/library/ya2zha7s(v=vs.110).aspx
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Vrais si le double est très proche de zéro, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Nullable{System.Double},System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double,System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Vrais si le double est très proche de zéro ou s'il n'y a pas de valeur, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotZero(System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <returns>Faux si le double est très proche de zéro, sinon vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotZero(System.Nullable{System.Double})">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <returns>Faux si le double est très proche de zéro ou s'il n'y a pas de valeur, sinon vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotZero(System.Double,System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double,System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Faux si le double est très proche de zéro, sinon vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotZero(System.Nullable{System.Double},System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsZero(System.Double,System.Double)"/>
            </summary>
            <param name="value">Valeur double à vérifier</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Faux si le double est très proche de zéro ou s'il n'y a pas de valeur, sinon vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double)">
            <summary>
            Permet de vérifier si un double est équal (à peu prés!) à un autre double 
            La précision par défaut est DefaultPrecision
            Pour une précision personalisée utilisez la fonction : <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double,System.Double)"/>
            voir: https://msdn.microsoft.com/fr-fr/library/ya2zha7s(v=vs.110).aspx
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <returns>Vrais si les deux doubles sont égales à la précision par défaut, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double)"/>
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <returns>Vrais si les deux doubles sont égales à la précision par défaut ou s'il n'y a pas de valeur, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double,System.Double)">
            <summary>
            Permet de vérifier si un double est équal (à peu prés!) à un autre double 
            voir: https://msdn.microsoft.com/fr-fr/library/ya2zha7s(v=vs.110).aspx
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Vrais si les deux doubles sont égales à la précision par défaut, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Nullable{System.Double},System.Nullable{System.Double},System.Double)">
            <summary>
            Permet de vérifier si un double est équal (à peu prés!) à un autre double 
            voir: https://msdn.microsoft.com/fr-fr/library/ya2zha7s(v=vs.110).aspx
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Vrais si les deux doubles sont égales à la précision par défaut, sinon faux.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotEqual(System.Double,System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double)"/>
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <returns>Faux si les deux doubles sont égales à la précision par défaut, sinon Vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotEqual(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double)"/>
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <returns>Faux si les deux doubles sont égales à la précision par défaut ou s'il n'y a pas de valeur, sinon Vrais.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.DoubleExtensions.IsNotEqual(System.Double,System.Double,System.Double)">
            <summary>
            Voir <see cref="M:Fred.Framework.Extensions.DoubleExtensions.IsEqual(System.Double,System.Double,System.Double)"/>
            </summary>
            <param name="left">Valeur double à gauche de l'opérande</param>
            <param name="right">Valeur double à droite de l'opérande</param>
            <param name="precision">nombre de chiffre après la virgule définissant le degrés d'erreur acceptable, exemple 0.00001</param>
            <returns>Faux si les deux doubles sont égales à la précision par défaut, sinon Vrais.</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.EnumerableExtensions">
            <summary>
            Methodes d'extension des IEnumerable
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumerableExtensions.Pagine``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Pagine une séquence.
            La séquence doit être triée avec un OrderBy avant d'utiliser cette fonction.
            </summary>
            <typeparam name="TSource">Type des éléments de la source.</typeparam>
            <param name="source">La source.</param>
            <param name="page">L'index de la page.</param>
            <param name="pageSize">La taille d'une page.</param>
            <returns>La séquence paginée.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumerableExtensions.Pagine``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Int32,System.Int32)">
            <summary>
            Pagine une séquence.
            </summary>
            <typeparam name="TSource">Type des éléments de la source.</typeparam>
            <typeparam name="TKey">Type de la clé retournée par la fonction représentée par orderBy.</typeparam>
            <param name="source">La source.</param>
            <param name="orderBy">Le tri souhaité.</param>
            <param name="page">L'index de la page.</param>
            <param name="pageSize">La taille d'une page.</param>
            <returns>La séquence paginée.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumerableExtensions.Search``2(System.Collections.Generic.IEnumerable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Retourne une séquence qui contient des éléments dont certains champs contiennent une chaîne recherchée.
            </summary>
            <typeparam name="TSource">Type des éléments de la source.</typeparam>
            <typeparam name="TSearch">Le type qui représente les champs où rechercher.</typeparam>
            <param name="source">La source.</param>
            <param name="search">La chaîne à rechercher.</param>
            <param name="searchor">Indique les champs où rechercher.</param>
            <returns>La séquence qui contient les éléments recherchés.</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.EnumExtension">
            <summary>
              Permet d'afficher certaines informations pour une énumération
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ToStringValue(System.Enum)">
            <summary>
              Convert the value of an enum to a string
            </summary>
            <example>enum.element=1 => return "1";</example>
            <param name="value">énumération</param>
            <returns>valeur de l'enum en chaine</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ToIntValue(System.Enum)">
            <summary>
              Return the int value of an enum
            </summary>
            <example>enum.element=1 => return 1;</example>
            <param name="value">enumération</param>
            <returns>valeur entière de l'enum</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ToEnum``1(System.Int32)">
            <summary>
              Convert an int to an enum.
            </summary>
            <typeparam name="T">Type of the enum</typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>enumération de type T</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ToEnum``1(System.Int16)">
            <summary>
              Convert an short to an enum.
            </summary>
            <typeparam name="T">Type of the enum</typeparam>
            <param name="enumValue">The enum value.</param>
            <returns>énumération de type T</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
              For each.
            </summary>
            <typeparam name="T">Type of the enum</typeparam>
            <param name="source">The source.</param>
            <param name="action">The action.</param>
            <exception cref="T:System.ArgumentNullException">soure is null</exception>
            <exception cref="T:System.ArgumentNullException">action is null</exception>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ParseEnum``1(System.String)">
            <summary>
              Parses a string to enum.
            </summary>
            <typeparam name="T">type of the enum</typeparam>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">T must be an enumerated type</exception>
            <returns>enumération</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.ParseEnum``1(System.String,``0)">
            <summary>
              Parses the enum.
            </summary>
            <typeparam name="T">type of the enum</typeparam>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <exception cref="T:System.ArgumentException">T must be an enumerated type</exception>
            <returns>If foudn, return the string value converted to enum, else return the default value </returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.GetDisplayAttribute(System.Enum)">
            <summary>
              Retourne s'il existe, l'attribut <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> d'une enumération
            </summary>
            <param name="value">enum with DisplayAttribute</param>
            <returns>
              DisplayAttribute or null
            </returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.GetDisplayDescription(System.Enum)">
            <summary>
              Permet de récupérer la chaine du champ Description de l'attribut <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> d'une énumération
            </summary>
            <param name="value">enum with DisplayAttribute</param>
            <returns>
              string
            </returns>
        </member>
        <member name="M:Fred.Framework.Extensions.EnumExtension.GetDisplayName(System.Enum)">
            <summary>
              Permet de récupérer la chaine du champ Name de l'attribut <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> d'une énumération
            </summary>
            <param name="value">enum with DisplayAttribute</param>
            <returns>
              string
            </returns>
        </member>
        <member name="T:Fred.Framework.Extensions.ExceptionExtensions">
            <summary>
            Class d'extension pour les exceptions.
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.ExceptionExtensions.FirstInnerException(System.Exception)">
            <summary>
            Permet d'avoir la première d'exception.
            </summary>
            <param name="exception">L'exception.</param>
            <returns>La première exception.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.ExceptionExtensions.GetMessages(System.Exception)">
            <summary>
            Retourne le message de l'exception ainsi que ceux des exceptions interne.
            Le séparateur utilisé entre les messages est Environment.NewLine.
            </summary>
            <param name="exception">L'exception concernée.</param>
            <returns>Le message de l'exception ainsi que ceux des exceptions interne.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.ExceptionExtensions.GetMessages(System.Exception,System.String)">
            <summary>
            Retourne le message de l'exception ainsi que ceux des exceptions interne.
            </summary>
            <param name="exception">L'exception concernée.</param>
            <param name="separator">Le séparateur utilisé entre les messages.</param>
            <returns>Le message de l'exception ainsi que ceux des exceptions interne.</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.ExpressionExtension">
            <summary>
            Methodes d'extension des Expression
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.ExpressionExtension.Include``1(System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Methode d'extension pour inclure des proprietes lors d'un appel a Entity framework
            </summary>
            <typeparam name="T">Type de l'entité</typeparam>
            <param name="includes">Liste d'includes precedamment crée</param>
            <param name="include">Expression pour chargé une propriété</param>
            <returns>Liste d'includes</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.ExpressionExtension.AsPath``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Methode d'extension permettant de convertir une expression en string utilable dans un include.
            Source : https://stackoverflow.com/questions/47052419/how-to-pass-lambda-include-with-multiple-levels-in-entity-framework-core/47063432#47063432
            </summary>
            <typeparam name="T">Type de l'entité</typeparam>
            <param name="expression">Expression à convertir.</param>
            <returns>Expression convertie en chaine de caractères.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.ExpressionExtension.GetSearchExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Retourne une expression de recherche.
            </summary>
            <typeparam name="TSource">Type des éléments de la source.</typeparam>
            <typeparam name="TSearch">Le type qui représente les champs où rechercher.</typeparam>
            <param name="searchor">L'expression de recherche.</param>
            <param name="search">La chaîne à rechercher.</param>
            <returns>L'expression de la recherche.</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.ExpressionExtension.SetOrAndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            return right si left est null, sinon Expression.AndAlso(left, right)
            </summary>
            <param name="left">La partie gauche du And.</param>
            <param name="right">La partie droite du And.</param>
            <returns>right si left est null, sinon Expression.AndAlso(left, right)</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.QueryableExtensions">
            <summary>
            Methodes d'extension des IQueryable
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.QueryableExtensions.WhereMulti``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            Filtre une séquence de valeurs selon des prédicats.
            </summary>
            <typeparam name="TSource">Type des éléments de la source.</typeparam>
            <param name="source">Source à filtrer.</param>
            <param name="predicates">Fonctions permettant de tester chaque élément par rapport à une condition.</param>
            <returns>IQueryable qui contient les éléments de la séquence d'entrée qui satisfont aux conditions spécifiées par predicate</returns>
        </member>
        <member name="T:Fred.Framework.Extensions.StringExtensions">
            <summary>
              Class d'extension pour les strings
            </summary>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.ContainsSpecialChar(System.String)">
            <summary>
              Methode permettant de détecter si une chaîne contient des caractères spéciaux
            </summary>
            <param name="str">Chaîne à vérifier</param>
            <returns>True si il y a des caractères spéciaux</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.ToUpperFirstLetter(System.String)">
            <summary>
            Méthode permettant de mettre la première lettre d'une chaine de caractère en majuscule
            </summary>
            <param name="str">Chaîne de caractère</param>
            <returns>La chaîne de caractère avec la 1er letter en majuscule</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            Determine si une chaine est null ou vide
            </summary>
            <param name="text">la chaine</param>
            <returns>True si la chaine est nulle ou vide</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Permet de faire "chaine".IsNullOrWhiteSpace(), plutôt que String.IsNullOrWhiteSpace("chaine")
            </summary>
            <param name="str">chaine à vérifier</param>
            <returns>true if the str parameter is null or System.String.Empty, or if str consists exclusively of white-space characters</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Tronque une chaine de charactere
            </summary>
            <param name="value">La chaine de charactere</param>
            <param name="maxLength">la longueur maximale</param>
            <returns>La chaione ou la chaine tronquée</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Retourne les n premiers caractères de str
            </summary>
            <param name="str">chaine</param>
            <param name="length">nombre de caractères à retourner depuis le début</param>
            <returns>les n premiers caractères de str</returns>
        </member>
        <member name="M:Fred.Framework.Extensions.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Retourne les n derniers caractères de str
            </summary>
            <param name="str">chaine</param>
            <param name="length">nombre de caractères à retourner depuis la fin</param>
            <returns>les n derniers caractères de str</returns>
        </member>
        <member name="T:Fred.Framework.FeatureFlipping.EnumFeatureFlipping">
            <summary>
            Liste des features flippings 
            Correspond aux éléments dans la table FRED_FEATURE_FLIPPING
            Pour 
            - Créer une feature :
               - Ajouter la feature dans un script sql dans le référentiel
               - Ajouter un enum avec le même code (colonne Code)
               - Faire un TUA sur la feature activée et désactivée pour vérifier que le code s'exécute comme attendu dans les deux cas.
            - Supprimer une feature
               - Dans un 1er temps elle peut être désactivé
               - Supprimer en base la ligne correspondante via un script sql dans le référentiel
               - Supprimer l'enum
               
            Merci de lire la doc !
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.SampleFeature">
            <summary>
            Feature d'exemple, merci de ne pas la supprimer, vous pouvez regarder comment elle est utilisée dans le code pour vous en inspirer.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ActivationClotureOperationDiverses">
            <summary>
            Feature de l'activation de la clôture des OD
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.BlocageFournisseursSansSIRET">
            <summary>
            Feature blocage
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.TriTableauExplorateurDepenses">
            <summary>
            Activation des colonnes triables sur l'explorateur de dépense
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.BudgetIntegrationFormules">
            <summary>
            Activation des formules sur le sous detail budget
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.EditionsPaieAmeliorations">
            <summary>
            Activation des améliorations des éditions de la "vérification des temps" dans les rapports journaliers.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.CorrectionFournisseurSAP">
            <summary>
            Correction fournisseur de la commande par celui reçu via flux MIRO
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.PersonnelsNouveauxFiltres">
            <summary>
            Feature des nouveaux filtres de recherche du personnel
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.VerificationCoordonneesGPS">
            <summary>
            Active la vérification des coordonnées GPS dans le cadre du calcul des indemnités de déplacement.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.BudgetDetailCopierDeplacerT4">
            <summary>
            Active la copie / déplacement de T4 dans le détail budget.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ExplorateurDepensesFiltresMOMateriels">
            <summary>
            Active les filtres complémentaire MO/Matériel Interne ou Interim/Location
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.MultiplePeriodeOperationDiverses">
            <summary>
            Active la selection multiple des periodes sur les OD
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ParametrageAvancementDroitADepense">
            <summary>
            Active le paramétrage du droit à dépense sur les Avancements
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.RapportsHorairesObligatoires">
            <summary>
            Active l'obligation de saisir les plages horaires sur les CI
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.AfficherOngletMaterielsExternesRapports">
            <summary>
            Active l'affichage des onglets matériels externe dans les picklists des pointages 
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.VerificationCodePostalCiPrimeGDIGDP">
            <summary>
            La prime GDI / GDP dépend du code postal du chantier.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ActivateDesactivateFiltrePointageSyntheseMensuelle">
            <summary>
            Activer ou désactiver le filtrage dans l'écran pointage synthése mensuelle
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ModificationCiRapportJournalier">
            <summary>
            Active la modification du ci lors de l'initialisation d'un rapport journalier cf: US_7943
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.WebSiteInMaintenance">
            <summary>
            Active le site comme etant en maintenance
            Cela reduit le nombre d'utilisateur qui peuvent acceder au site par exemple.
            </summary>
        </member>
        <member name="F:Fred.Framework.FeatureFlipping.EnumFeatureFlipping.ActivationUS13085_6000">
            <summary>
            Active les Us 13085 et 6000
            </summary>
        </member>
        <member name="T:Fred.Framework.Images.ImageHelpers">
            <summary>
            Représente les methodes d'extentions pour les images
            </summary>
        </member>
        <member name="M:Fred.Framework.Images.ImageHelpers.Resize(System.Object,System.Double)">
            <summary>
            Permet de retaillé une image
            </summary>
            <param name="img"></param>
            <param name="height">La hauteur de l'image max</param>
            <returns>Une Image</returns>
        </member>
        <member name="M:Fred.Framework.Images.ImageHelpers.ToByteArray(System.Object)">
            <summary>
              Convertit une imag en tableau de bytes
            </summary>
            <param name="img">Image</param>
            <returns>Tableau de bytes</returns>
        </member>
        <member name="T:Fred.Framework.Linq.LinqExtension">
            <summary>
            Extension linq
            </summary>
        </member>
        <member name="M:Fred.Framework.Linq.LinqExtension.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Creer un batch
            </summary>
            <typeparam name="T">type d'element</typeparam>
            <param name="items">les element</param>
            <param name="maxItems">nombre maximal du batch</param>
            <returns> une liste decoupé par batch</returns>
        </member>
        <member name="M:Fred.Framework.Linq.LinqExtension.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Execute une action sur une liste d'element
            </summary>
            <typeparam name="T">type d'element</typeparam>
            <param name="list">liste d'element</param>
            <param name="action">action a executer</param>
        </member>
        <member name="T:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel">
            <summary>
            Modèle contenant les index de colonne pour l'entête des éditions Excel.
            Permet de calculer automatiquement ces index en fonction des largeurs minimums indiquées.
            </summary>
        </member>
        <member name="M:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.#ctor(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Constructeur.
            </summary>
            <param name="logoSocieteMinWidth">La largeur minimum du logo de la société.</param>
            <param name="titreMinWidth">La largeur minimum de la colonne du titre.</param>
            <param name="infosMinWidth">La largeur minimum de la colonne des informations.</param>
            <param name="logoFredMinWidth">La largeur minimum de la colonne du logo de FRED.</param>
            <param name="minLastIndex">L'index minimum de la fin de la bannière.</param>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.LogoSocieteMinWidth">
            <summary>
            La largeur minimum du logo de la société.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.TitreMinWidth">
            <summary>
            La largeur minimum de la colonne du titre.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.InfosMinWidth">
            <summary>
            La largeur minimum de la colonne des informations.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.LogoFredMinWidth">
            <summary>
            La largeur minimum de la colonne du logo de FRED.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel.MinLastIndex">
            <summary>
            L'index minimum de la fin de la bannière.
            </summary>
        </member>
        <member name="T:Fred.Framework.Models.Reporting.BuildHeaderExcelModel">
            <summary>
            Modèle contenant les informations de l'entête
            </summary>
        </member>
        <member name="M:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Fred.Framework.Models.Reporting.IndexHeaderExcelModel)">
            <summary>
            Constructeur du modèle de construction de l'entête de l'édition
            </summary>
            <param name="titre">Titre de l'édition</param>
            <param name="sousTitre">Sous-titre de l'édition (Optionnel)</param>
            <param name="dateEdition">Libellé d'affichage de la date d'édition</param>
            <param name="editePar">Libellé de l'auteur de l'édition sous "dateEdition"</param>
            <param name="infoSupplementaire">Libelé d'informations supplémentaires présent sous "editePar" (Optionnel)</param>
            <param name="pathLogo">Chemin du logo</param>
            <param name="indexHeaderModel">Modèle contenant les index de colonne pour l'entête des éditions Excel</param>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.Titre">
            <summary>
            Titre de l'édition
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.SousTitre">
            <summary>
            Sous-titre de l'édition
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.DateEdition">
            <summary>
            Libellé d'affichage de la date d'édition
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.EditePar">
            <summary>
            Libellé de l'auteur de l'édition sous "dateEdition"
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.InfoSupplementaire">
            <summary>
            Libelé d'informations supplémentaires présent sous "editePar"
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.PathLogo">
            <summary>
            Chemin du logo de la société
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.BuildHeaderExcelModel.IndexHeaderModel">
            <summary>
            Libelé d'informations supplémentaires présent sous "editePar"
            </summary>
        </member>
        <member name="T:Fred.Framework.Models.Reporting.IndexHeaderExcelModel">
            <summary>
            Modèle contenant les index de colonne pour l'entête des éditions Excel
            </summary>
        </member>
        <member name="M:Fred.Framework.Models.Reporting.IndexHeaderExcelModel.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructeur du modèle contenant les index de colonne pour l'entête de l'édition
            </summary>
            <param name="indexColonneTitre">Index de la colonne pour le titre</param>
            <param name="indexColonneInfos">Index de la colonne pour les informations</param>
            <param name="indexColonneLogoFred">Index de la colonne pour le logo FRED</param>
            <param name="indexDerniereColonne">Index de la dernière colonne de la page</param>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.IndexHeaderExcelModel.IndexColonneTitre">
            <summary>
            Index de la colonne du titre
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.IndexHeaderExcelModel.IndexColonneInfos">
            <summary>
            Index de la colonne des informations
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.IndexHeaderExcelModel.IndexColonneLogoFred">
            <summary>
            Index de la colonne pour le logo Fred
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Reporting.IndexHeaderExcelModel.IndexDerniereColonne">
            <summary>
            Index de la colonne pour le logo Fred
            </summary>
        </member>
        <member name="T:Fred.Framework.Models.CacheItemWithPolicy">
            <summary>
              Représente un objet cache avec sa politique d'ajout
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.CacheItemWithPolicy.CacheItem">
            <summary>
            Obtient ou définit l'objet caché 
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.CacheItemWithPolicy.Key">
            <summary>
            Obtient ou définit la clé de Cache
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.CacheItemWithPolicy.CacheItemPolicy">
            <summary>
            Obtient ou définit la policy de cache
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.CacheItemWithPolicy.ExpirationDate">
            <summary>
            Obtient ou définit la date d'expiration d'un object dans le cache
            </summary>
        </member>
        <member name="T:Fred.Framework.Models.Result`1">
            <summary>
            Classe qui permet d'encapsuler une resultat et une erreur
            </summary>
            <typeparam name="T">type de resultat</typeparam>
        </member>
        <member name="P:Fred.Framework.Models.Result`1.Success">
            <summary>
            Indique si le resultat est ok.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Result`1.Error">
            <summary>
            Retourne l'erreur.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Result`1.Errors">
            <summary>
            Retourne l'erreur.
            </summary>
        </member>
        <member name="P:Fred.Framework.Models.Result`1.Value">
            <summary>
            valeur du resultat ok.
            </summary>
        </member>
        <member name="M:Fred.Framework.Models.Result`1.CreateSuccess(`0)">
            <summary>
            Créer un resultat ok
            </summary>
            <param name="value">valeur du resultat</param>
            <returns>Result</returns>
        </member>
        <member name="M:Fred.Framework.Models.Result`1.CreateFailure(System.String)">
            <summary>
            Créer un resultat ko
            </summary>
            <param name="error">erreur</param>
            <returns>Result</returns>
        </member>
        <member name="M:Fred.Framework.Models.Result`1.CreateFailureWithData(System.String,`0)">
            <summary>
            Créer un resultat ko avec une donnée.
            </summary>
            <param name="error">erreur</param>
            <param name="data">donnée</param>
            <returns>Result</returns>
        </member>
        <member name="M:Fred.Framework.Models.Result`1.CreateFailureWithData(System.Collections.Generic.List{System.String},`0)">
            <summary>
            Créer un resultat ko avec une donnée.
            </summary>
            <param name="errors">Liste d'erreurs</param>
            <param name="data">donnée</param>
            <returns>Result</returns>
        </member>
        <member name="T:Fred.Framework.ContextHelper">
            <summary>
              CLasse d'aide à la gestion des contextes.
            </summary>
        </member>
        <member name="M:Fred.Framework.ContextHelper.GetData(System.String)">
            <summary>
              Récupère une donnée du contexte HTTP.
            </summary>
            <param name="name">Nom de la donnée à récupérer.</param>
            <returns>La donnée si elle existe, NULL sinon.</returns>
        </member>
        <member name="M:Fred.Framework.ContextHelper.SetData(System.String,System.Object)">
            <summary>
              Initialise une donnée du contexte HTTP.
            </summary>
            <param name="name">Nom de la donnée à récupérer.</param>
            <param name="data">Donnée à insérer.</param>
        </member>
        <member name="T:Fred.Framework.PagingContext">
            <summary>
              Représente le contexte d'une page.
            </summary>
        </member>
        <member name="P:Fred.Framework.PagingContext.Page">
            <summary>
              Obtient ou définit la page à afficher
            </summary>
        </member>
        <member name="P:Fred.Framework.PagingContext.Take">
            <summary>
              Obtient ou définit le nombre d'éléments à sélectionner.
            </summary>
        </member>
        <member name="P:Fred.Framework.PagingContext.Total">
            <summary>
              Obtient ou définit le nombre d'éléments à sélectionner.
            </summary>
        </member>
        <member name="T:Fred.Framework.QueryPagingHelper">
            <summary>
              La classe QueryPagingHelper
            </summary>
        </member>
        <member name="M:Fred.Framework.QueryPagingHelper.ApplyPaging``1(System.Linq.IQueryable{``0})">
            <summary>
              Execute le filtrage par page d'une requête suivant les informations de pagination renseignées.
            </summary>
            <typeparam name="T">Type de l'entité référence.</typeparam>
            <param name="query">Requête à mettre à jour.</param>
            <returns>La requête mise à jour.</returns>
        </member>
        <member name="M:Fred.Framework.QueryPagingHelper.ApplyScrollPaging``1(System.Linq.IQueryable{``0})">
            <summary>
              Execute le filtrage par défilement d'une requête suivant les informations de pagination renseignées.
            </summary>
            <typeparam name="T">Type de l'entité référence.</typeparam>
            <param name="query">Requête à mettre à jour.</param>
            <returns>La requête mise à jour.</returns>
        </member>
        <member name="T:Fred.Framework.QuerySortingHelper">
            <summary>
              La classe QuerySortingHelper
            </summary>
        </member>
        <member name="M:Fred.Framework.QuerySortingHelper.SetSortingInfo``1(System.Linq.IQueryable{``0})">
            <summary>
              Insère les informations de tri du contexte dans une requête.
            </summary>
            <typeparam name="T">Type de l'entité référence.</typeparam>
            <param name="query">Requête à mettre à jour.</param>
            <returns>La requête mise à jour.</returns>
        </member>
        <member name="T:Fred.Framework.SortingContext">
            <summary>
              Classe de gestion du contexte de tri.
            </summary>
        </member>
        <member name="P:Fred.Framework.SortingContext.Sorts">
            <summary>
              Obtient ou définit le mode de tri de la sélection.
            </summary>
        </member>
        <member name="T:Fred.Framework.SortingData">
            <summary>
              Représente un tri.
            </summary>
        </member>
        <member name="P:Fred.Framework.SortingData.Field">
            <summary>
              Obtient ou définit le nom du champ utilisé pour le tri.
            </summary>
        </member>
        <member name="P:Fred.Framework.SortingData.Dir">
            <summary>
              Obtient ou définit la direction du tri.
            </summary>
        </member>
        <member name="T:Fred.Framework.Reporting.ExcelFormat">
            <summary>
            Classe de génération de documents excel 
            </summary>
        </member>
        <member name="P:Fred.Framework.Reporting.ExcelFormat.ExcelEngine">
            <summary>
            Moteur Excel de SyncFusion
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GenerateExcelAndSaveOnServer``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Syncfusion.XlsIO.IWorkbook})">
            <summary>
            Génère un fichier Excel à partir d'un template et le sauvegarde dans le cache du serveur pour une durée de 30 secondes.
            </summary>
            <typeparam name="T">Type des donnée a sauvegarde(represente un element sur une ligne)</typeparam>
            <param name="templatePath">le path du template</param>
            <param name="data">les elements a sauvegardé sur la feuille excel de type T</param>
            <param name="workbookCustomAction">une action qui permet du customisé le fichier excel</param>
            <returns>l'id du cache</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GenerateExcel``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Syncfusion.XlsIO.IWorkbook},Fred.Framework.Models.Reporting.BuildHeaderExcelModel,System.Boolean)">
            <summary>
            Génère un fichier Excel à partir d'un template
            et rempli le fichier avec la liste d'object modelList
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="templateFilePath">Fichier template Excel</param>
            <param name="modelList">liste d'objet à écrire dans le fichier</param>
            <param name="customTranformWorbook">Action qui permet de modifier le wookbook</param>
            <param name="buildHeaderModel">Model du header</param>
            <returns>renvoie le fichier sous forme de bytes pour pouvoir le mettre dans le cache et l'envoyer au navigateur</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GeneratePdfFromExcel``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Syncfusion.XlsIO.IWorkbook},System.String,Fred.Framework.Models.Reporting.BuildHeaderExcelModel)">
            <summary>
            Génère un fichier Excel à partir d'un template
            et rempli le fichier avec la liste d'object modelList
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="templateFilePath">Fichier template Excel</param>
            <param name="modelList">liste d'objet à écrire dans le fichier</param>
            <param name="customTranformWorbook">Action qui permet de modifier le wookbook</param>
            <param name="repeatedRowHeader">Ligne a répéter sur chaque page</param>
            <param name="buildHeaderModel">Model du header</param>
            <returns>renvoie le fichier sous forme de bytes pour pouvoir le mettre dans le cache et l'envoyer au navigateur</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GenerateExcelCustomTransformBeforePopulate``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Action{Syncfusion.XlsIO.IWorkbook})">
            <summary>
            Génère un fichier Excel mais applique la fonction de transformation AVANT de peupler l'excel
            avec les données du model
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="templateFilePath">Fichier template Excel</param>
            <param name="modelList">liste d'objet à écrire dans le fichier</param>
            <param name="customTranformWorbook">Action qui permet de modifier le wookbook</param>
            <returns>renvoie le fichier sous forme de bytes pour pouvoir le mettre dans le cache et l'envoyer au navigateur</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GenerateAndSaveExcel``1(System.String,System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Génère un fichier Excel à partir d'un template
            et rempli le fichier avec la liste d'object modelList
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="templateFilePath">Fichier template Excel</param>
            <param name="modelList">liste d'objet à écrire dans le fichier</param>
            <param name="destinationPath">Destination du fichier</param>
            <returns>renvoie le fichier sous forme de bytes pour pouvoir le mettre dans le cache et l'envoyer au navigateur</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.InitVariables(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Initialise un workbook en vue de l'ajout de variables
            </summary>
            <param name="workbook">worbook à initialisé</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.InitVariables(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Initialise un workbook en vue de l'ajout de variables
            </summary>
            <param name="worksheet">worksheet à initialiser</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.AddVariable(System.String,System.Object)">
            <summary>
            Ajoute une variable au template
            </summary>
            <param name="objectName">Nom de la variable passé au template</param>s
            <param name="obj">variable passé au template</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ApplyVariables">
            <summary>
            Applique les variables au template et charge avec données 
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.InsertRowFormatAsBefore(Syncfusion.XlsIO.IWorkbook,System.Int32)">
            <summary>
            Insère une ligne dans le classeur
            </summary>
            <param name="workbook">classeur</param>
            <param name="indexRow">Index de la ligne à insérer</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.SetCellValue(Syncfusion.XlsIO.IWorkbook,System.Int32,System.Int32,System.String)">
            <summary>
            Affecte une valeur à une cellule d'un workbook
            </summary>
            <param name="workbook">worbook concerné par la modification de cellule</param>
            <param name="indexRow">Index de la ligne de la cellule</param>
            <param name="indexColumn">Index de la colonne de la cellule</param>
            <param name="value">Valeur à affecter dans la cellule</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.SetFormula(Syncfusion.XlsIO.IWorkbook,System.Int32,System.Int32,System.String)">
            <summary>
            Affecte une formule à une cellule d'un workbook
            </summary>
            <param name="workbook">worbook concerné par la modification de cellule</param>
            <param name="indexRow">Index de la ligne de la cellule</param>
            <param name="indexColumn">Index de la colonne de la cellule</param>
            <param name="value">Valeur à affecter dans la cellule</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.PrintExcelToPdf(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            PrintExcelToPdf
            </summary>
            <param name="workbook">workbook</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.PrintExcelToPdfAutoFit(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            PrintExcelToPdf avec ajustement sur une page
            </summary>
            <param name="workbook">workbook</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GenerateExcelDepenses``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Génère un fichier Excel à partir d'un template
            et rempli le fichier avec la liste d'object modelList
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="templateFilePath">Fichier template Excel</param>
            <param name="modelList">liste d'objet à écrire dans le fichier</param>
            <returns>renvoie le fichier sous forme de bytes pour pouvoir le mettre dans le cache et l'envoyer au navigateur</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GetNewWorbook">
            <summary>
            Récupère un fichier Excel Template
            </summary>
            <returns>Workbook excel</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.OpenTemplateWorksheet(System.String)">
            <summary>
            Ouvre un fichier Excel Template
            </summary>
            <param name="pathName">Le chemin d'accés</param>
            <returns>Ouvre un workbook excel</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.AddWorkSheetTemplate``1(Syncfusion.XlsIO.IWorkbook,Syncfusion.XlsIO.IWorksheet,System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ajout multi-feuille
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="workbook">Le workbook</param>
            <param name="worksheetTemplate">Le worksheetTemplate</param>
            <param name="list">La liste</param>
            <param name="workSheetName">Le nom de la feuille</param>
            <param name="objectName">Le nom de l'objectName</param>
            <param name="markerSheets">Le dictionnaire de marker</param>
            <returns>Renvoie un IWorkbook</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.RemoveWorksheetsExcept(System.Collections.Generic.List{System.String},Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Supprime tous les onglets sauf ceux de la liste passée en paramètre
            </summary>
            <param name="listWorkSheet">liste passée en paramètre</param>
            <param name="workbook">classeur excel</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ChargerFichier(System.String)">
            <summary>
            Méthode de test, pour charger un fichier en mémoire
            </summary>
            <param name="pathname">chemin du fichier à charger</param>
            <returns>objet contenant le fichier chargé en mémoire</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.Dispose(System.Boolean)">
            <summary>
            Désallocation du excel après vérification
            </summary>
            <param name="disposing">Connaitre si le fichier est déjà libéré</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.PopulateTemplate``1(Syncfusion.XlsIO.IWorkbook,System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Rempli une page Excel avec une liste d'object en fonction du Template utilisé
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="workbook">Le workbook</param>
            <param name="modelName">Le nom du modèle</param>
            <param name="modelList">La liste de modèles</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ConvertToByte(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Converti un workbook en byte
            En effet, il ne faut pas utiliser directement GetBuffer()
            car il n'y a pas de notion de taille dans GetBuffer, donc quand on flush la mémoire
            sur un fichier, si tu as des zeros en mémoire après ton buffer, et bin ton fichier va contenir aussi des zeros
            à la fin...
            Bref, ne jamais travailler sur un buffer sans en connaître sa taille !
            Corrige la WI 1912, c-a-d Fichier excel corrompu.
            </summary>
            <param name="workbook">Le workbook</param>
            <returns>un tableau de byte sans dépassement de mémoire...</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GetCellAdress(Syncfusion.XlsIO.IWorkbook,System.Int32,System.Int32)">
            <summary>
            Obtient l'adresse d'une cellule
            </summary>
            <param name="workbook">Le workbook</param>
            <param name="indexRow">Index de la ligne de la cellule</param>
            <param name="indexCol">Index de la colonne de la cellule</param>
            <returns>L'adresse de la cellule </returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.SaveExcelToMemoryStream(Syncfusion.XlsIO.IWorkbook,System.IO.MemoryStream)">
            <summary>
            Sauvegarde sous forme de bytes 
            </summary>
            <param name="workbook">Nom du fichier excel</param>
            <param name="memoryStream">Stream de fichiers</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ChangeBorderStyle(Syncfusion.XlsIO.IWorkbook,System.String,Syncfusion.XlsIO.ExcelBordersIndex,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Applique un style aux bordures des cellules d'un workbook
            </summary>
            <param name="workbook">Le workbook</param>
            <param name="range">la plage de cellules</param>
            <param name="border">Bordure de la cellule</param>
            <param name="style">Style à appliquer</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ChangeColor(Syncfusion.XlsIO.IWorkbook,System.String,System.Drawing.Color)">
            <summary>
            Applique une couleur aux cellules d'un workbook
            </summary>
            <param name="workbook">Le workbook</param>
            <param name="range">la plage de cellules</param>
            <param name="color">couleur à appliquer aux cellules</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.Dispose">
            <summary>
            Désallocation du excel
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GeneratePdfOrExcel(System.Boolean,Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Generate Pdf Or Excel
            </summary>
            <param name="isPdf">is pdf</param>
            <param name="workbook">workbook</param>
            <returns>MemoryStream</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.AddVariableIntemplate``1(System.Collections.Generic.IEnumerable{``0},System.String,Syncfusion.XlsIO.ITemplateMarkersProcessor,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Ajout multi-feuille
            </summary>
            <typeparam name="T">Le template</typeparam>
            <param name="list">La liste</param>
            <param name="objectName">Le nom de l'objectName</param>
            <param name="markerProc">Process creation Macker</param>
            <param name="markerSheets">Le dictionnaire de marker</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.AutoFitRows(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Ajustement de la hauteur des lignes de détail.
            Bug syncfusion lors de la conversion pdf, il est nécessaire de définir les hauteurs de lignes une par une.
            </summary>
            <param name="workSheet">worksheet</param>
            <param name="startIndex">index de départ</param>
            <param name="endIndex">index de fin</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.BuildHeader(Syncfusion.XlsIO.IWorksheet,Fred.Framework.Models.Reporting.BuildHeaderExcelModel,System.Boolean,System.Boolean)">
            <summary>
            Construit l'entête d'un export excel
            </summary>
            <param name="ws">Worksheet à modifier</param>
            <param name="buildHeaderModel">Modèle contenant les informations de l'entête</param>
            <param name="insertRow">Indique si le header est inséré avant ou placé sur la première ligne</param>
            <param name="isPrime">Si concernce les rapports primes</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.AddLogoSociete(System.String,Syncfusion.XlsIO.IWorksheet,System.Boolean)">
            <summary>
            Ajoute le logo de la société courante à la feuille de calcule
            </summary>
            <param name="path">Chemin d'accès au logo</param>
            <param name="worksheet">Feuille de calcule</param>
            <param name="isPrime">Si concernce les rapports primes</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.ComputeHeaderBestIndexes(Syncfusion.XlsIO.IWorksheet,Fred.Framework.Models.Reporting.BestIndexHeaderExcelModel)">
            <summary>
            Calcule les meilleurs index à utiliser pour les champs du header.
            </summary>
            <param name="worksheet">La page concernée.</param>
            <param name="model">Le model qui contient les tailles minimums des champs.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.GetHeaderBestLastIndex(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Double)">
            <summary>
            Retourne l'index de la colonne qui permet à partir du paramètre start d'avoir au moins minWidth.
            </summary>
            <param name="worksheet">La page concernée.</param>
            <param name="start">L'index de début.</param>
            <param name="minWidth">La largeur minimum de la colonne.</param>
            <returns>L'index de la colonne.</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.ExcelFormat.FindLogoAndAddPictureForExcel(System.String,System.String,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            recherhce le tag et le remplacer avec le logo
            </summary>
            <param name="pathCGA">path du fichier logo</param>
            <param name="searchTag">recherche du tag</param>
            <param name="worksheet">work Sheet</param>
        </member>
        <member name="T:Fred.Framework.Reporting.ReportingExtension">
            <summary>
            Méthodes d'extension pour Reporting />
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.ReportingExtension.TransformMemoryStreamToPdfOrExcel(System.IO.MemoryStream,System.Boolean)">
            <summary>
            Transform MemoryStream Object To Pdf Or Excel
            </summary>
            <param name="stream">stream</param>
            <param name="isPdf">is Pdf</param>
            <returns>object</returns>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.Excel.ExcelBasicStyle">
            <summary>
            Représente un style basique Excel.
            Ici la fonction d'application du style ne prend pas de paramètre utilisateur.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelBasicStyle.#ctor(System.Action{Syncfusion.XlsIO.IRange})">
            <summary>
            Constructeur.
            </summary>
            <param name="apply">La fonction qui applique le style.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelBasicStyle.#ctor(Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle,System.Action{Syncfusion.XlsIO.IRange})">
            <summary>
            Constructeur.
            </summary>
            <param name="baseStyle">Le style de base.</param>
            <param name="apply">La fonction qui applique le style.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelBasicStyle.Apply(Fred.Framework.Reporting.SyncFusion.Excel.IExcelColumns,System.Int32,System.String)">
            <summary>
            Applique le style.
            </summary>
            <param name="columns">Les colonnes où appliquer le style.</param>
            <param name="row">L'index de la ligne où appliquer le style.</param>
            <param name="value">La valeur à mettre dans les colonnes.</param>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumn">
            <summary>
            Représente une colonne Excel.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumn.worksheet">
            <summary>
            La page.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumn.Index">
            <summary>
            L'index de la colonne.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumn.#ctor(Syncfusion.XlsIO.IWorksheet,System.Int32)">
            <summary>
            Constructeur.
            </summary>
            <param name="worksheet">La page.</param>
            <param name="index">L'index de la colonne.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumn.GetRange(System.Int32)">
            <summary>
            Retourne le range en fonction de l'index de la ligne.
            </summary>
            <param name="row">Index de la ligne</param>
            <returns>Le range.</returns>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns">
            <summary>
            Représente des colonnes Ecxel consécutives.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.worksheet">
            <summary>
            La page.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.Start">
            <summary>
            L'index de la première colonne.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.End">
            <summary>
            L'index de la dernière colonne.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.Count">
            <summary>
            Le nombre de colonne.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.#ctor(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Constructeur.
            </summary>
            <param name="worksheet">La page.</param>
            <param name="start">L'index de la première colonne.</param>
            <param name="end">L'index de la dernière colonne.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelColumns.GetRange(System.Int32)">
            <summary>
            Retourne le range en fonction de l'index de la ligne.
            </summary>
            <param name="row">Index de la ligne</param>
            <returns>Le range.</returns>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle">
            <summary>
            Représente un style Excel.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle.baseStyle">
            <summary>
            Le style de base s'il existe.
            </summary>
        </member>
        <member name="F:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle.apply">
            <summary>
            La fonction qui applique le style.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle.#ctor(System.Action{Syncfusion.XlsIO.IRange})">
            <summary>
            Constructeur.
            </summary>
            <param name="apply">La fonction qui applique le style.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle.#ctor(Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle,System.Action{Syncfusion.XlsIO.IRange})">
            <summary>
            Constructeur.
            </summary>
            <param name="baseStyle">Le style de base.</param>
            <param name="apply">La fonction qui applique le style.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.ExcelStyle.Apply(Fred.Framework.Reporting.SyncFusion.Excel.IExcelColumns,System.Int32,System.String)">
            <summary>
            Applique le style.
            </summary>
            <param name="columns">Les colonnes où appliquer le style.</param>
            <param name="row">L'index de la ligne où appliquer le style.</param>
            <param name="value">La valeur à mettre dans les colonnes.</param>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.Excel.IExcelColumns">
            <summary>
            Interface des colonnes Excel.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.Excel.IExcelColumns.GetRange(System.Int32)">
            <summary>
            Retourne le range en fonction de l'index de la ligne.
            </summary>
            <param name="row">Index de la ligne.</param>
            <returns>Le range.</returns>
        </member>
        <member name="T:Fred.Framework.Reporting.SyncFusion.SyncFusionExtension">
            <summary>
            Methodes d'extension pour les objets SyncFusion.
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.SyncFusionExtension.FullBorders(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Encadre un range.
            </summary>
            <param name="range">Le range concerné.</param>
            <param name="lineStyle">Le style de ligne de la bordure.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.SyncFusionExtension.LeftRightBorders(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Met une bordure à gauche et à droite d'un range.
            </summary>
            <param name="range">Le range concerné.</param>
            <param name="lineStyle">Le style de ligne de la bordure.</param>
        </member>
        <member name="M:Fred.Framework.Reporting.SyncFusion.SyncFusionExtension.SetBorders(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelLineStyle,Syncfusion.XlsIO.ExcelBordersIndex[])">
            <summary>
            Met les bordures indiquées.
            </summary>
            <param name="range">Le range concerné.</param>
            <param name="lineStyle">Le style de ligne de la bordure.</param>
            <param name="borders">Les bordures concernées.</param>
        </member>
        <member name="T:Fred.Framework.Reporting.WordDocumentExtension">
            <summary>
            Méthodes d'extension pour <see cref="T:Syncfusion.DocIO.DLS.WordDocument"/>
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.WordDocumentExtension.FromFile(System.String)">
            <summary>
            Charge un fichier Word.
            </summary>
            <param name="pathName">Chemin du fichier.</param>
            <returns>Le document Word correspondant.</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.WordDocumentExtension.Inject(Syncfusion.DocIO.DLS.WordDocument,System.String,System.Collections.IEnumerable)">
            <summary>
            Injecte des données dans un document Word.
            </summary>
            <param name="document">Le document Word concerné.</param>
            <param name="groupName">Nom du type d'objets manipulés.</param>
            <param name="list">Liste d'objets à injecter dans le document généré</param>
        </member>
        <member name="M:Fred.Framework.Reporting.WordDocumentExtension.Append(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Ajoute un document Word à la suite.
            </summary>
            <param name="document">Le document Word source.</param>
            <param name="other">Le document Word à ajouter.</param>
        </member>
        <member name="T:Fred.Framework.Reporting.WordPdfFormat">
            <summary>
              Classe de génération de documents word et PDF
            </summary>
        </member>
        <member name="M:Fred.Framework.Reporting.WordPdfFormat.GeneratePdf(System.String,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
              Méthode de génération d'un fichier PDF après conversion d'un word généré
            </summary>
            <param name="pathName">Chemin d'accès vers le template</param>
            <param name="pathCGA">Chemin des CGA</param>
            <param name="groupName">Nom du type d'objets manipulés</param>
            <param name="list">Liste d'objets à injecter dans le document généré</param>
            <returns>Le fichier en flux de mémoire</returns>
        </member>
        <member name="M:Fred.Framework.Reporting.WordPdfFormat.GeneratePdf(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
              Méthode de génération d'un fichier PDF après conversion d'un word généré
            </summary>
            <param name="wordDocument">Le document Word concerné</param>
            <returns>Le fichier en flux de mémoire</returns>
        </member>
        <member name="T:Fred.Framework.Security.UserModel">
            <summary>
              La classe UserModel
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.AccountExpires">
            <summary>
              Obtient ou définit la propriété accountExpires Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.BadPasswordTime">
            <summary>
              Obtient ou définit la propriété badPasswordTime Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.BadPwdCount">
            <summary>
              Obtient ou définit la propriété badPwdCount Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Cn">
            <summary>
              Obtient ou définit la propriété cn Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Company">
            <summary>
              Obtient ou définit la propriété company Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.DisplayName">
            <summary>
              Obtient ou définit la propriété displayName Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.DistinguishedName">
            <summary>
              Obtient ou définit la propriété distinguishedName Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.EnatelLastSuccessfullAuthenticationTime">
            <summary>
              Obtient ou définit la propriété enatelLastSuccessfullAuthenticationTime Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.GivenName">
            <summary>
              Obtient ou définit la propriété givenName Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Initials">
            <summary>
              Obtient ou définit la propriété initials Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.LastLogonTimestamp">
            <summary>
              Obtient ou définit la propriété lastLogonTimestamp Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Mail">
            <summary>
              Obtient ou définit la propriété mail Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.MemberOf">
            <summary>
              Obtient ou définit la propriété memberOf Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Name">
            <summary>
              Obtient ou définit la propriété name Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.ObjectGUID">
            <summary>
              Obtient ou définit la propriété objectGUID Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.PwdLastSet">
            <summary>
              Obtient ou définit la propriété pwdLastSet Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.SAMAccountName">
            <summary>
              Obtient ou définit la propriété sAMAccountName Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.SAMAccountType">
            <summary>
              Obtient ou définit la propriété sAMAccountType Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Sn">
            <summary>
              Obtient ou définit la propriété sn Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.UserPrincipalName">
            <summary>
              Obtient ou définit la propriété userPrincipalName Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.WhenChanged">
            <summary>
              Obtient ou définit la propriété whenChanged Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.WhenCreated">
            <summary>
              Obtient ou définit la propriété whenCreated Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="P:Fred.Framework.Security.UserModel.Guid">
            <summary>
              Obtient ou définit la propriété whenCreated Active Directory d'un utilisateur
            </summary>
        </member>
        <member name="T:Fred.Framework.Security.SecurityManager">
            <summary>
              Couche technique Authorization Manager
              - Gestion des habilitations
              - Gestion des connexion (interne / externe)
              ....
            </summary>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.DecryptBase64(System.String,System.String@,System.String@,System.String@)">
            <summary>Authentification de l'utilisateur en fournissant uniquement la basic auth </summary>
            <param name="base64">Chaine Basic Auth au format base64</param>
            <param name="outDomaine">Retourne le domaine renseigné par l'utilisateur</param>
            <param name="outLogin">Retourne le login de l'utilisateur</param>
            <param name="outPassword">Retourne le mot de passe décrypté</param>
            <remarks>Retourne les paramètres outDomaine, outLogin, outPassword</remarks>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.AuthenticateUserInActiveDirectory(System.String,System.String,System.String)">
            <summary>Valide l'authentification de l'utilisateur soit dans l'active directory</summary>
            <param name="domain">Le domaine</param>
            <param name="login">Le login</param>
            <param name="password">le mot de passe</param>
            <returns>Vrai si l'utilisateur est authentifié</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetUserIdentity(System.String,System.String,System.String)">
            <summary>
              Récupère le détail des informations de l'utilisateur
            </summary>
            <param name="domaine">Domaine</param>
            <param name="login">Login de l'utilisateur</param>
            <param name="pwd">Mot de passe</param>
            <returns>
              UserModel de sécurité
            </returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetIdentity(System.String,System.String)">
            <summary>Vérifie si  le login est présent dans l'active directory</summary>
            <param name="domaine">Domaine Active Directory</param>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetIdentity(System.String,System.String,System.String)">
            <summary>Vérifie si  le login est présent dans l'active directory</summary>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <param name="email">Critère de recherche sur l'Adresse email</param>
            <param name="objectSid">Critère de recherche sur la propriété objectSid</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetIdentity(System.String,System.String,System.String,System.String)">
            <summary>
              Vérifie si  le login est présent dans l'active directory + recherche AD pour un login  + récupération des
              propriétés
            </summary>
            <param name="domaine">Domaine Active Directory</param>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <param name="email">Critère de recherche sur l'Adresse email</param>
            <param name="objectSid">Critère de recherche sur la propriété objectSid</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.SetUtilisateurClaim(System.Object)">
            <summary>
              Ajout de la fiche utilisateur dans le Claim
            </summary>
            <param name="o">Objet utilisateur</param>
            <returns>Retourne un claim complet avec les informations de base</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.RemoveClaim">
            <summary>
              Suppression du claim utilisateur
            </summary>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetUtilisateurId">
            <summary>
              Obtient l'ID de l'utilisateur définit dans les claims d'authentification
            </summary>
            <returns>Id utilisateur</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.Logout">
            <summary>
              Supprimer le claims (contexte) de l'utilisateur
            </summary>
            <returns>Id utilisateur</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.ExtractPropertiesFromUser(System.DirectoryServices.AccountManagement.Principal)">
            <summary>
              Exctraction des propriétés d'un utilisateur Active Directory
            </summary>
            <param name="u">L'active directory de l'utilisateur</param>
            <returns>Un model de sécurité</returns>
        </member>
        <member name="M:Fred.Framework.Security.SecurityManager.GetByParameterName(System.Object,System.String)">
            <summary>
              Extraction d'une valeur d'un objet Utilisateur
            </summary>
            <param name="o">Objet utilisateur</param>
            <param name="k">Valeur de propriété</param>
            <returns>Retourne la valeur de la clé</returns>
        </member>
        <member name="T:Fred.Framework.Security.ISecurityManager">
            <summary>
              Interface ISecurityManager
            </summary>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.DecryptBase64(System.String,System.String@,System.String@,System.String@)">
            <summary>Authentifie l'utilisateur sur l'active directory </summary>
            <param name="base64">base 64 obtenue via la BasicAuth</param>
            <param name="outDomaine">Retourne le domaine renseigné par l'utilisateur</param>
            <param name="outLogin">Retourne le login de l'utilisateur</param>
            <param name="outPassword">Retourne le mot de passe décrypté</param>
            <remarks>Retourne Domaine / Login et Mot de passe décrypté</remarks>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.AuthenticateUserInActiveDirectory(System.String,System.String,System.String)">
            <summary>Authentification de l'utilisateur sur un active directory </summary>
            <param name="domain">Domaine sur lequel l'utilisateur devra s'authentifier</param>
            <param name="login">Login de l'utilisateur</param>
            <param name="password">Mot de passe de l'utilisateur</param>
            <returns>Retourne TRUE si l'authentification est validée</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.GetUserIdentity(System.String,System.String,System.String)">
            <summary>
              Récupère le détail des informations de l'utilisateur
            </summary>
            <param name="domaine">Domaine sur lequel l'utilisateur devra s'authentifier</param>
            <param name="login">Login de l'utilisateur</param>
            <param name="pwd">Mot de passe de l'utilisateur</param>
            <returns>Retourne le model de sécurité</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.GetIdentity(System.String,System.String,System.String)">
            <summary>Vérifie si  le login est présent dans l'active directory</summary>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <param name="email">Critère de recherche sur le login</param>
            <param name="objectSid">Critère de recherche sur la propriété objectSid</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.GetIdentity(System.String,System.String,System.String,System.String)">
            <summary>Vérifie si  le login est présent dans l'active directory</summary>
            <param name="domaine">Critère de recherche sur la propriété domaine</param>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <param name="email">Critère de recherche sur le login</param>
            <param name="objectSid">Critère de recherche sur la propriété objectSid</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.GetIdentity(System.String,System.String)">
            <summary>Vérifie si  le login est présent dans l'active directory</summary>
            <param name="domaine">Domaine de recherche</param>
            <param name="samAccountName">Critère de recherche sur la propriété samAccountName</param>
            <returns>Retourne Liste des utilisateurs</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.SetUtilisateurClaim(System.Object)">
            <summary>
              Ajout de la fiche utilisateur dans le Claim
            </summary>
            <param name="o">Objet utilisateur</param>
            <returns>Retourne un claim complet avec les informations de base</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.RemoveClaim">
            <summary>
              Suppression du claim utilisateur
            </summary>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.GetUtilisateurId">
            <summary>
              Obtient l'ID de l'utilisateur définit dans les claims d'authentification
            </summary>
            <returns>Id utilisateur</returns>
        </member>
        <member name="M:Fred.Framework.Security.ISecurityManager.Logout">
            <summary>
              Supprimer le claims (contexte) de l'utilisateur
            </summary>
            <returns>Id utilisateur</returns>
        </member>
        <member name="T:Fred.Framework.ICacheManager">
            <summary>
              Gestionnaire du cache au sein de l'application.
              Utilise en interne le système de cache HTTP standard
            </summary>
        </member>
        <member name="M:Fred.Framework.ICacheManager.GetOrCreate``1(System.String,System.Func{``0},System.TimeSpan)">
            <summary>
              Renvoie ou crée une entrée de cache en fonction de la clé et de la fonction de création.
            </summary>
            <typeparam name="T"> Le type d'objet à mettre en cache</typeparam>
            <param name="cacheKey"> La clé de cache.</param>
            <param name="refreshFunc"> La fonction de rafraichissement/création de la donnée.</param>
            <param name="slidingExpiration"> Le délai d'expiration glissante depuis la dernière consultation.</param>
            <returns> La donnée stockée en cache ou nouvellement créée.</returns>
        </member>
        <member name="M:Fred.Framework.ICacheManager.Remove(System.String)">
            <summary>
              Retire du cache l'entrée spécifiée.
            </summary>
            <param name="cacheKey"> La clé de cache.</param>
        </member>
        <member name="M:Fred.Framework.ICacheManager.GetAll">
            <summary>
              returner la liste des éléments de cache
            </summary>
            <returns> la liste des éléments de cache</returns>
        </member>
        <member name="T:Fred.Framework.ILogManager">
            <summary>
              Gestionnaire de logs, encapsule l'ensemble des systèmes sous-jacents.
            </summary>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceDebug(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Debug dans les logs.
            </summary>
            <param name="message">Message de warning à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceException(System.String,System.Exception,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Exception dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="ex">L'exception à logguer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceException(System.String,Fred.Framework.Exceptions.FredException,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type FredException dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="ex">L'exception à logguer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceError(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Error dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceInformation(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Information dans les logs.
            </summary>
            <param name="message">Message d'information à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceWarning(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Warning dans les logs.
            </summary>
            <param name="message">Message de warning à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.WriteLine(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée non typée dans les logs.
            </summary>
            <param name="message">Message à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.ILogManager.TraceObject(System.String,System.Object)">
            <summary>
              Ecrit une entrée de type Debug contenant toutes les properties de l'object
            </summary>
            <param name="message">message décrivant objectToDump</param>
            <param name="objectToDump">objet dont les properties seront dumpées en string</param>
        </member>
        <member name="T:Fred.Framework.LogManager">
            <summary>
              Gestionnaire de logs, encapsule l'ensemble des systèmes sous-jacents.
            </summary>
        </member>
        <member name="M:Fred.Framework.LogManager.DictionnaryToString(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Transforme un dictionnaire de string/string en texte brute
              Chaque entrée/valeur est écrite sur une nouvelle ligne
            </summary>
            <param name="properties">Propriétés du sictionnaire</param>
            <returns>Retourne un string</returns>
        </member>
        <member name="M:Fred.Framework.LogManager.WriteLine(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée non typée dans les logs.
            </summary>
            <param name="message">Message à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceException(System.String,System.Exception,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Exception dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="ex">L'exception à logguer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceException(System.String,Fred.Framework.Exceptions.FredException,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type FredException dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="ex">L'exception à logguer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceError(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Error dans les logs.
            </summary>
            <param name="message">Message d'erreur à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceWarning(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Warning dans les logs.
            </summary>
            <param name="message">Message de warning à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceInformation(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Information dans les logs.
            </summary>
            <param name="message">Message de warning à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceDebug(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Ecrit une entrée de type Debug dans les logs.
            </summary>
            <param name="message">Message de warning à indiquer.</param>
            <param name="properties">Ensemble des clés/valeurs qui complète le message.</param>
        </member>
        <member name="M:Fred.Framework.LogManager.TraceObject(System.String,System.Object)">
            <summary>
              Ecrit une entrée de type Debug contenant toutes les properties de l'object
            </summary>
            <param name="message">message décrivant objectToDump</param>
            <param name="objectToDump">objet dont les properties seront dumpées en string</param>
        </member>
        <member name="T:Fred.Framework.Services.Google.Address">
            <summary>
              La classe Address
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.Adresse1">
            <summary>
              Obtient ou définit Adresse1
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.Adresse2">
            <summary>
              Obtient ou définit Adresse2
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.Adresse3">
            <summary>
              Obtient ou définit Adresse3
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.CodePostal">
            <summary>
              Obtient ou définit le code postal
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.Ville">
            <summary>
              Obtient ou définit la ville
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Address.Pays">
            <summary>
              Obtient ou définit le pays
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.AddressComponent">
            <summary>
              La classe AddressComponent
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.AddressComponent.Long_name">
            <summary>
              Obtient ou définit Long_name
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.AddressComponent.Short_name">
            <summary>
              Obtient ou définit Short_name
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.AddressComponent.Types">
            <summary>
              Obtient ou définit le Type
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.AddressHelper">
            <summary>
            Helper pour gerer les adresses
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.Google.AddressHelper.ConvertAddressToString(Fred.Framework.Services.Google.Address,System.Boolean)">
            <summary>
            Converti une classe Adresse en chaine de caractere.
            </summary>
            <param name="adresse">adresse</param>
            <param name="withoutAddresses">fait la recherche avec ou sans les adresses</param>
            <returns>Chaine de caractere  representant l'adresse</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.AddressHelper.ConvertAddressComponentsToAddress(System.Collections.Generic.List{Fred.Framework.Services.Google.AddressComponent})">
            <summary>
            Formate l'adresse reçue des services Google
            </summary>
            <param name="addressComponents">Composant</param>
            <returns>Address formatée</returns>
        </member>
        <member name="T:Fred.Framework.Services.Google.GeocodeHelper">
            <summary>
            Helper pour le geocodage
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeHelper.FormatGeocodeUrl(System.String)">
            <summary>
            Formate l'url
            </summary>
            <param name="adresse">adresse</param>
            <returns>l'url du service google a appelé</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeHelper.FormatInverseGeocodeUrl(Fred.Framework.Services.Google.Location)">
            <summary>
            Formate l'url pour l'inverse du geocodage( lat - long => adresse)
            </summary>
            <param name="location">location</param>
            <returns>l'url du service google a appelé</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeHelper.GeocodeStatusIsOk(Fred.Framework.Services.Google.GeocodeResult)">
            <summary>
            Determine si le resultatat du service ggole est ok
            </summary>
            <param name="geoResponse">geoResponse</param>
            <returns>true si le resultat est ok</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeHelper.CallGoogleGeocodeApi(System.String)">
            <summary>
            Appelle le service ggogle
            </summary>
            <param name="url">url a appeler</param>
            <returns>GeocodeResult</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeHelper.FormatLocation(Fred.Framework.Services.Google.Location)">
            <summary>
            Format la Location (7 chiffres apres la virgule)
            </summary>
            <param name="oldLocation">oldLocation</param>
            <returns>Location</returns>
        </member>
        <member name="T:Fred.Framework.Services.Google.GeocodeResult">
            <summary>
              Définition du format de sortie du géodecodig Google
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.GeocodeResult.Results">
            <summary>
              Obtient ou définit Résultat
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.GeocodeResult.Status">
            <summary>
              Obtient ou définit le status de la réponse (ok)
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.Geometry">
            <summary>
              La classe Geometry
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Geometry.Location">
            <summary>
              Obtient ou définit la location
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Geometry.Location_type">
            <summary>
              Obtient ou définit le location_type
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Geometry.Viewport">
            <summary>
              Obtient ou définit leviewport
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.IGeocodeService">
            <summary>
              Interface IGeocodeService
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.Google.IGeocodeService.Geocode(Fred.Framework.Services.Google.Address)">
            <summary>
            Permet de geocoder une adresse
            </summary>
            <param name="adresse">adresse a géocoder</param>
            <returns>GeocodeResult</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.IGeocodeService.InverseGeocode(Fred.Framework.Services.Google.Location)">
            <summary>
            Donne une adresse en fonction d'une location(lat et lng)
            </summary>
            <param name="location">location</param>
            <returns>GeocodeResult</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.IGeocodeService.GetDrivingDistanceInKm(Fred.Framework.Tool.GeographicCoordinate,Fred.Framework.Tool.GeographicCoordinate)">
            <summary>
            Retourne le nombre de kilometre routier entre 2 coordonnées géographique.
            </summary>
            <param name="origine">La coordonnée d'origine.</param>
            <param name="destination">La coordonnée de destination.</param>
            <returns>Le nombre de kilometre routier entre les 2 coordonnées ou 0 si au moins une des coordonnées est null.</returns>
        </member>
        <member name="T:Fred.Framework.Services.Google.GeocodeService">
            <summary>
              La classe Map
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeService.GetDrivingDistanceInKm(System.String,System.String,System.String,System.String)">
            <summary>
              Retourne le nombre de kilometre routier entre 2 points GPS
            </summary>
            <param name="latOrigine">Latitude du point d'origine</param>
            <param name="lngOrigine">Longitude du point d'origine</param>
            <param name="latDestination">Latitude du point de destination</param>
            <param name="lngDestination">Longitude du point de destination</param>
            <returns>Retourne une distance en kilometre entre 2 points</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeService.GetDrivingDistanceInKm(System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Retourne le nombre de kilometre routier entre 2 points GPS
            </summary>
            <param name="latOrigine">Latitude du point d'origine</param>
            <param name="lngOrigine">Longitude du point d'origine</param>
            <param name="latDestination">Latitude du point de destination</param>
            <param name="lngDestination">Longitude du point de destination</param>
            <returns>Retourne une distance en kilometre entre 2 points</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeService.GetDrivingDistanceInKm(Fred.Framework.Tool.GeographicCoordinate,Fred.Framework.Tool.GeographicCoordinate)">
            <summary>
            Retourne le nombre de kilometre routier entre 2 coordonnées géographique.
            </summary>
            <param name="origine">La coordonnée d'origine.</param>
            <param name="destination">La coordonnée de destination.</param>
            <returns>Le nombre de kilometre routier entre les 2 coordonnées ou 0 si au moins une des coordonnées est null.</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeService.Geocode(Fred.Framework.Services.Google.Address)">
            <summary>
            Geocode une adresse
            </summary>
            <param name="adresse">adresse</param>
            <returns>Entry</returns>
        </member>
        <member name="M:Fred.Framework.Services.Google.GeocodeService.InverseGeocode(Fred.Framework.Services.Google.Location)">
            <summary>
            Donne une adresse en fonction d'une location(lat et lng)
            </summary>
            <param name="location">location</param>
            <returns>GeocodeResult</returns>
        </member>
        <member name="T:Fred.Framework.Services.Google.Location">
            <summary>
              La classe Location
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Location.Lat">
            <summary>
              Obtient ou définit le Lat
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Location.Lng">
            <summary>
              Obtient ou définit le Lng
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.Northeast">
            <summary>
              La classe Northeast
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Northeast.Lat">
            <summary>
              Obtient ou définit le lat
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Northeast.Lng">
            <summary>
              Obtient ou définit le lng
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.Result">
            <summary>
            Classe Result du geocodage
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Address_components">
            <summary>
              Obtient ou définit la liste address_components
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Adresse">
            <summary>
              Obtient ou définit l'address
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Formatted_address">
            <summary>
              Obtient ou définit le Formatted_address
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Geometry">
            <summary>
              Obtient ou définit Geometry
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Partial_match">
            <summary>
              Obtient ou définit une valeur indiquant si Partial_match
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Place_id">
            <summary>
              Obtient ou définit la Place_id
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Result.Types">
            <summary>
              Obtient ou définit les Types
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.Southwest">
            <summary>
              Le Southwest
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Southwest.Lat">
            <summary>
              Obtient ou définit le Lat
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Southwest.Lng">
            <summary>
              Obtient ou définit le Lng
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.Google.Viewport">
            <summary>
              La classe Viewport
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Viewport.Northeast">
            <summary>
              Obtient ou définit le northeast
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Google.Viewport.Southwest">
            <summary>
              Obtient ou définit le southwest
            </summary>
        </member>
        <member name="T:Fred.Framework.Services.SendMail">
            <summary>
              <para/> Permet d'envoyer une mail en utilisant le protocol SMPT.
              <para/> Les paramètres du serveur de mail sont récupérés depuis la config.
              <para/> VOUS DEVEZ APPELER IDisposable.Dispose ou utiliser Using().
              <para/> Pour utiliser un serveur mock : https://github.com/rnwood/smtp4dev
            <example>
              <para/> Exemple d'utilisation :
            <code>
              <para/> using (SendMail sender = new SendMail())
              <para/> {
              <para/> sender.From("test@test.com", "Prenom Nom");
              <para/> sender.To("test@test.com");
              <para/> sender.Subject = "test";
              <para/> sender.Body = "This is a test e-mail.";
              <para/> sender.AddAttachement(@"D:\file.pdf");
              <para/> sender.ServerAddress = "smtp.test.com";
              <para/> sender.ServerPort = 25;
              <para/> sender.Send();
              <para/> }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.#ctor">
            <summary>
              Initialise une nouvelle instance de la classe<see cref="T:Fred.Framework.Services.SendMail"/>.
              Récupère les paramètres du serveur dans la config
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Fred.Framework.Services.SendMail"/> class.
            Because disposable types implement a finalizer.
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.EMail">
            <summary>
              Objet décrivant le message à envoyer
              Permet d'utiliser des options avancées
              Si vous utilisez cet objetet, ajouter votre code dans cette classe pour en faire bénéficier tout le monde si c'est justifié...
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.Tos">
            <summary>
              Liste des destinataires de l'email
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.ToCc">
            <summary>
              Liste des destinataires en copie de l'email
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.ToBcc">
            <summary>
              Liste des destinataires en copie carbonne de l'email
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.Subject">
            <summary>
              Sujet du mail
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.Body">
            <summary>
              Corps du mail.
              Si vous voulez des options avancées comme un mail html, utilisez EMail
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.ServerAddress">
            <summary>
              Adresse IP ou Hostname du serveur
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.ServerPort">
            <summary>
              Port du serveur, par défaut 25
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.SendMail.Attachments">
            <summary>
              Retourne la liste des pièces jointes
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.AddAttachement(System.String,System.String,System.String)">
            <summary>
              Ajoute une pièce jointe au mail
            </summary>
            <param name="fullPath">
              Un String qui contient un chemin d’accès de fichier à utiliser pour créer cette pièce jointe.
            </param>
            <param name="fileName">Nom de la piece jointe voulue</param>
            <param name="contentType">
              Un String qui contient les informations d’en-tête de contenu MIME pour cette pièce jointe.
              Utilisez par exemple MediaTypeNames.Text.Plain pour du texte ou MediaTypeNames.Application.Octet pour du binaire
              (valeur par défaut)
            </param>
            <exception cref="T:Fred.Framework.Exceptions.FredTechnicalException">
              <paramref name="fullPath" /> is null.
            </exception>
            
        </member>
        <member name="M:Fred.Framework.Services.SendMail.AddAttachement(System.IO.Stream,System.String,System.String)">
            <summary>
              Ajoute une pièce jointe au mail
            </summary>
            <param name="contentStream">
              Lisible Stream qui contient le contenu de cette pièce jointe.
            </param>
            <param name="name">Nom du fichier de la pièce jointe</param>
            <param name="contentType">
              Un String qui contient les informations d’en-tête de contenu MIME pour cette pièce jointe.
              Utilisez par exemple MediaTypeNames.Text.Plain pour du texte ou MediaTypeNames.Application.Octet pour du binaire
              (valeur par défaut)
            </param>
            <exception cref="T:Fred.Framework.Exceptions.FredTechnicalException">
              <paramref name="contentStream" /> is null.
            </exception>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.To(System.String,System.String)">
            <summary>
              Ajoute un destinataire au mail
            </summary>
            <param name="addressEmail">A <see cref="T:System.String" /> that contains an e-mail address.</param>
            <param name="displayName">
              A <see cref="T:System.String" /> that contains the display name associated with
              <paramref name="addressEmail" />. This parameter can be null.
            </param>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.To(System.String)">
            <summary>
              Ajoute un destinataire au mail
            </summary>
            <param name="addressEmail">A <see cref="T:System.String" /> that contains an e-mail address.</param>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.From(System.String,System.String)">
            <summary>
              Personne qui envoie le mail
            </summary>
            <param name="addressEmail">A <see cref="T:System.String" /> that contains an e-mail address.</param>
            <param name="displayName">
              A <see cref="T:System.String" /> that contains the display name associated with
              <paramref name="addressEmail" />. This parameter can be null.
            </param>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.From(System.String)">
            <summary>
              Personne qui envoie le mail
            </summary>
            <param name="addressEmail">A <see cref="T:System.String" /> that contains an e-mail address.</param>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.Send">
            <summary>
              Envoie l'email.
              Les différents éléments doivent avoir été renseignés. (from, to, subjet, body ...)
              #########################################################################
              Configuration avec smtp4dev :
              sender.Host = "localhost";
              sender.Port = 25;
              #########################################################################
            </summary>
            <exception cref="T:Fred.Framework.Exceptions.FredTechnicalException">En cas d'erreur d'envoie"</exception>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.PopulateBody(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Generer le Body bMail
            </summary>
            <param name="myDictionary">Dictionary value appent</param>
            <param name="templateFileName">Path for Teamplate HTML</param>
            <returns>retourn un format de l'Email</returns>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.SendFormattedEmail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Send Mail
            </summary>
            <param name="fromEmail">Adresse Email From Send</param>
            <param name="toEmail">Adresse Email To Send</param>
            <param name="subject">subject  Email</param>
            <param name="body">corps de L'email</param>
            <param name="isBodyHtml">Format Html ou non</param>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.Dispose">
            <summary>
              Releases all resources used by the System.Net.Mail.MailMessage.
            </summary>
        </member>
        <member name="M:Fred.Framework.Services.SendMail.Dispose(System.Boolean)">
            <summary>
              Releases the unmanaged resources used by the System.Net.Mail.MailMessage and optionally releases the managed
              resources.
            </summary>
            <param name="disposing">
              true to release both managed and unmanaged resources; false to release only unmanaged
              resources.
            </param>
        </member>
        <member name="T:Fred.Framework.Services.Token">
            <summary>
              Classe Token
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Token.AccessToken">
            <summary>
              Obtient ou définit le Token
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Token.TokenType">
            <summary>
              Obtient ou définit le type du Token
            </summary>
        </member>
        <member name="P:Fred.Framework.Services.Token.ExpiresIn">
            <summary>
              Obtient ou définit le temps de validité du Token
            </summary>
        </member>
        <member name="T:Fred.Framework.Templating.TemplateNames">
            <summary>
            Liste des noms des templates
            </summary>
        </member>
        <member name="P:Fred.Framework.Templating.TemplateNames.EmailCommandeValidation">
            <summary>
            Template de l'email envoyé lors de la validation d'une commande
            </summary>
        </member>
        <member name="P:Fred.Framework.Templating.TemplateNames.EmailCommandeImpression">
            <summary>
            Template de l'email envoyé pour une commande Validé
            </summary>
        </member>
        <member name="T:Fred.Framework.Templating.TemplatingService">
            <summary>
            Service de templating
            </summary>
        </member>
        <member name="M:Fred.Framework.Templating.TemplatingService.GenererHtmlFromTemplate``1(System.String,``0)">
            <summary>
            Générer un page html à partir d'un modèle et d'un template
            </summary>
            <typeparam name="T">Type du modèle</typeparam>
            <param name="templateName">Nom du template</param>
            <param name="model">Le modèle utilisé</param>
            <returns>La page html générée</returns>
        </member>
        <member name="T:Fred.Framework.Tool.DistancesTool">
            <summary>
              Classe utilitaire permettant le calcul des distances
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.DistancesTool.GetOrthodromieInKm(System.Double,System.Double,System.Double,System.Double)">
            <summary>
              Calcul de la distance orthrodomique entre 2 coordonnées GPS
            </summary>
            <param name="latitudeDepart">Latitude du premier point GPS</param>
            <param name="longitudeDepart">Longitude du premier point GPS</param>
            <param name="latitudeArrive">Latitude du second point GPS</param>
            <param name="longitudeArrive">Longitude du second point GPS</param>
            <returns>La distance calculée</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DistancesTool.GetOrthodromieInKm(Fred.Framework.Tool.GeographicCoordinate,Fred.Framework.Tool.GeographicCoordinate)">
            <summary>
            Calcul la distance orthrodomique entre 2 coordonnées géographique.
            </summary>
            <param name="coordinate1">Coordonnée 1.</param>
            <param name="coordinate2">Coordonnée 2.</param>
            <returns>La distance calculée</returns>
            <remarks>Si les coordonnées sont identiques ou si au moins une des 2 est null alors la fonction retournera 0.</remarks>
        </member>
        <member name="T:Fred.Framework.Tool.DumpObject">
            <summary>
              This static class is used to assist tracing within the solution.
              Credit :
              http://blogs.msdn.com/b/mcsuksoldev/archive/2010/05/04/using-reflection-and-attributes-for-better-tracing-and-logging-data-rendering.aspx?Redirected=true
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.DumpObject.TracingResourcesNullValue">
            <summary>
              Null display value.
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.DumpObject.TracingResourcesQuote">
            <summary>
              Quote for displaying.
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.DumpObject.TracingResourcesParamSeparator">
            <summary>
              Seperator for displaying.
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.DumpObject.TracingResourcesUnknownValue">
            <summary>
              Unknown Property String Value.
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.ParameterCollectionToString(System.Object[])">
            <summary>
              Add details of a collection of parameters to the supplied log entry.
            </summary>
            <param name="parameters">Parameters to be described in the log entry.</param>
            <returns>String Value.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.ParameterObjectToString(System.Object)">
            <summary>
              Convert a parameter object to a string for display in the trace.
            </summary>
            <param name="parameter">Parameter object to convert.</param>
            <returns>A string describing the parameter object.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.GetObjectString(System.Object)">
            <summary>
              Gets a string representation of an object and items values.
            </summary>
            <param name="item">Object Item.</param>
            <returns>String Value.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.SerializeException(System.Exception)">
            <summary>
              Formate une chaine de caractère contenant différentes informations sur une exception
            </summary>
            <param name="exception">L'exception levée</param>
            <returns>Une string value</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.GetObjectValues(System.Object,System.Boolean)">
            <summary>
              Gets a string representation of an object and items values.
            </summary>
            <param name="item">Object Item.</param>
            <param name="multipleLine">Indicates is the output should be on a multiple lines.</param>
            <returns>Une string Value.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.GetPiiAttribute(System.Reflection.MemberInfo)">
            <summary>
              Gets the PersonallyIdentifiableInformation Attribute.
            </summary>
            <param name="member">Member Information.</param>
            <returns>Personally Identifiable Information Attribute.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.GetPiiString(System.String,System.String)">
            <summary>
              Gets the string from the Attribute name.
            </summary>
            <param name="displayOverride">The display override.</param>
            <param name="memberName">The member name.</param>
            <returns>String value to display.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.AddToStringBuilder(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
              Appends the given string to the given builder.
            </summary>
            <param name="builder">String Builder.</param>
            <param name="value">String Value.</param>
            <param name="multipleLine">Multiple line indicator.</param>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.ProcessProperty(System.Type,System.String,System.Object)">
            <summary>
              Returns a string from an object Property/Field.
            </summary>
            <param name="propertyType">Property/Field type.</param>
            <param name="propertyName">Property/Field name.</param>
            <param name="propertyValue">Property/Field value.</param>
            <returns>String of the Property/Field.</returns>
        </member>
        <member name="M:Fred.Framework.Tool.DumpObject.SerializeException(System.Exception,System.String)">
            <summary>
              Fonction récursive qui formate le message d'une exception, son StackTrace et les InnerException éventuelles
            </summary>
            <param name="e">L'exception levée</param>
            <param name="exceptionMessage">Le message de l'exception levée</param>
            <returns>Un string</returns>
        </member>
        <member name="T:Fred.Framework.Tool.FileTool">
            <summary>
            Outils facilitant la gestion des fichiers
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.FileTool.GetFileSizeInKo(System.String)">
            <summary>
            Calculer la taille en Ko d'un fichier
            </summary>
            <param name="path">Path du fichier à calculer</param>
            <returns>Taille en Ko</returns>
        </member>
        <member name="T:Fred.Framework.Tool.GeographicCoordinate">
            <summary>
            Représente une coordonnée géographique.
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.GeographicCoordinate.#ctor(System.Double,System.Double)">
            <summary>
            Constructeur.
            </summary>
            <param name="latitude">La latitude.</param>
            <param name="longitude">La longitude.</param>
        </member>
        <member name="P:Fred.Framework.Tool.GeographicCoordinate.Latitude">
            <summary>
            La latitude.
            </summary>
        </member>
        <member name="P:Fred.Framework.Tool.GeographicCoordinate.Longitude">
            <summary>
            La longitude.
            </summary>
        </member>
        <member name="T:Fred.Framework.Tool.IToolManager">
            <summary>
              La classe IToolManager sert à lire une valeur dans le fichier de configuration
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.IToolManager.GetConfig(System.String)">
            <summary>Obtient une valeur dans le fichier de configuration </summary>
            <param name="key">Clé de la valeur recherchée</param>
            <returns>Valeur de la clé</returns>
        </member>
        <member name="M:Fred.Framework.Tool.IToolManager.GetWeekOfYear(System.DateTime)">
            <summary>
              Calcule et retourne le numéro de la semaine d'une date
            </summary>
            <param name="date">date dont on veut connaître le numéro de semaine</param>
            <returns>Retourne le numéro de la semaine d'une date</returns>
        </member>
        <member name="T:Fred.Framework.Tool.InseeNumber">
            <summary>
              Classe INSEE Number
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.InseeNumber.Key">
            <summary>
              Constante pour le calcul de la clé
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.InseeNumber.Maxlength">
            <summary>
              Nombre de caractère du numéro INSEE
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.InseeNumber.CheckInseeNumber(System.String,System.String)">
            <summary>
              Verifie le numéro INSEE passé en paramètre (numero + clé)
            </summary>
            <param name="strNumero">Numéro INSEE</param>
            <param name="strCle">Clé de verification du numéro INSEE</param>
            <returns>Renvoie un tuple (bool,string): (True,"") si le numéro est correcte, sinon (False,[Clé proposée])</returns>
        </member>
        <member name="M:Fred.Framework.Tool.InseeNumber.CheckInseeNumber(System.String)">
            <summary>
              Verifie le numéro INSEE passé en paramètre
            </summary>
            <param name="strNumero">Numéro INSEE avec la clé</param>
            <returns>True si le numéro et la clé sont cohérent, sinon false</returns>
        </member>
        <member name="M:Fred.Framework.Tool.InseeNumber.KeyProcessInsee(System.String)">
            <summary>
              Calcul la clé correspondante au numéro INSEE passé en paramètre
            </summary>
            <param name="strNumero">Numero INSEE</param>
            <returns>Clé du numéro INSEE passé en paramètre, 0 si numéro invalide</returns>
        </member>
        <member name="M:Fred.Framework.Tool.InseeNumber.CleanString(System.String)">
            <summary>
              Enlève les caractères ne pouvant faire partie du numéro
              A-Z0-9 uniquement
            </summary>
            <param name="strNumero">Numéro INSEE</param>
            <returns>Retourne la chaîne épurée</returns>
        </member>
        <member name="M:Fred.Framework.Tool.InseeNumber.InseeToInteger(System.String)">
            <summary>
              Convertion du numéro (string) en entier
            </summary>
            <param name="strNumero">Numéro INSEE</param>
            <returns>Retourne le numéro INSEE sous forme d'un entier, 0 si numéro invalide</returns>
        </member>
        <member name="T:Fred.Framework.Tool.SensitiveInformationAttribute">
            <summary>
              This attribute class is used to hide Personally Identifiable Information (PII) when converting a class to a string.
              Typical usage is when logging a class aka Person, and you don't whant to log the bank number for exemple
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
              Just add the attribute
              [SensitiveInformationAttribute]
              public string AccountNumber { get; set; }
            </example>
        </member>
        <member name="F:Fred.Framework.Tool.SensitiveInformationAttribute.DefaultStringValue">
            <summary>
              Default string top display when not hidden.
            </summary>
        </member>
        <member name="F:Fred.Framework.Tool.SensitiveInformationAttribute.displayOverride">
            <summary>
              String value to display when not hidden.
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.SensitiveInformationAttribute.#ctor">
            <summary>
              Initialise une nouvelle instance de PersonallyIdentifiableInformationAttribute class
              <see cref="T:Fred.Framework.Tool.SensitiveInformationAttribute" />.
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.SensitiveInformationAttribute.#ctor(System.String)">
            <summary>
              Set le displayOverride.
            </summary>
            <param name="displayOverride">Value to display in ToString.</param>
        </member>
        <member name="P:Fred.Framework.Tool.SensitiveInformationAttribute.DisplayOverride">
            <summary>
              Gets the string override value when marked as PII.
            </summary>
            <value>
              The display override.
            </value>
        </member>
        <member name="P:Fred.Framework.Tool.SensitiveInformationAttribute.Hidden">
            <summary>
              Gets or sets a value indicating whether the value should be totally hidden.
            </summary>
            <value>
              <c>true</c> if hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Fred.Framework.Tool.SerialisationTools">
            <summary>
              Classe gérant la sérialisation des objets
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.SerialisationTools.Serialisation(System.Object)">
            <summary>
              Gère la sérialisation d'un objet sérialisable
            </summary>
            <param name="data">objet représentant une classe à enregistrer en bdd</param>
            <returns>Renvois un objet sérialisé</returns>
        </member>
        <member name="M:Fred.Framework.Tool.SerialisationTools.Deserialisation(System.Byte[])">
            <summary>
              Gère la désérialisation d'un objet sérialisé
            </summary>
            <param name="data">objet sérialisé en tableau de byte</param>
            <returns>retourne un objet désérialisé</returns>
        </member>
        <member name="T:Fred.Framework.Tool.SqlScriptProvider">
            <summary>
              Classe permettant de récupérer le contenu d'un fichier SQL intégré à un projet (Properties Build action du fichier : Embedded Resource)
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.SqlScriptProvider.GetEmbeddedSqlScriptContent(System.Reflection.Assembly,System.String)">
            <summary>
              Récupère le contenu d'un fichier SQL intégré à un projet
              Code reference : https://github.com/DbUp/DbUp/tree/master/src/DbUp/ScriptProviders
            </summary>
            <param name="assembly">Assembly contenant les fichiers</param>
            <param name="path">Chemin vers le fichier</param>
            <returns>Contenu du fichier</returns>
            <exception cref="T:Fred.Framework.Exceptions.FredTechnicalException">Erreur de lecture du fichier SQL</exception>
        </member>
        <member name="T:Fred.Framework.Tool.StringTool">
            <summary>
            Classe gérant les outils générique sur les strings
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.StringTool.StringPropertiesCleaner``1(``0)">
            <summary>
            Itération sur toutes les propriétés de type string afin de supprimer d'éventuelles espaces à la fin des chaînes.
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="entity">Entité</param>
        </member>
        <member name="M:Fred.Framework.Tool.StringTool.RemoveDiacritics(System.String)">
            <summary>
            Enlever les accents et les caractères spéciaux d'une chaine de caractère
            </summary>
            <param name="text">Chaine à traiter</param>
            <returns>Chaine sans accents et caractères spéciaux</returns>
        </member>
        <member name="T:Fred.Framework.Tool.ToolManager">
            <summary>
              La classe ToolManager sert à lire une valeur dans le fichier de configuration
            </summary>
        </member>
        <member name="M:Fred.Framework.Tool.ToolManager.GetConfig(System.String)">
            <summary>Obtient une valeur dans le fichier de configuration </summary>
            <param name="key">Clé de la valeur recherchée</param>
            <returns>Valeur de la clé</returns>
        </member>
        <member name="M:Fred.Framework.Tool.ToolManager.GetWeekOfYear(System.DateTime)">
            <summary>
              Calcule et retourne le numéro de la semaine d'une date
            </summary>
            <param name="date">date dont on veut connaître le numéro de semaine</param>
            <returns>Retourne le numéro de la semaine d'une date</returns>
        </member>
    </members>
</doc>
