using AutoMapper;
using Fred.Business.Parametre;
using Fred.Business.Unite;
using Fred.Entities;
using Fred.Web.Models.Referential;
using Fred.Web.Shared.Models.Bareme;
using System.Net.Http;
using System.Web.Http;

namespace Fred.Web.API
{
  public class BaremeExploitationController : ApiControllerBase
  {
    private readonly IMapper mapper;
    private readonly IParametreManager parametreMgr;
    private readonly IUniteManager uniteMgr;

    /// <summary>
    /// Constructeur.
    /// </summary>
    /// <param name="mapper">Mapper</param>
    /// <param name="parametreMgr">Le gestionnaire des parametres.</param>
    /// <param name="uniteMgr">Le gestionnaire des unités.</param>
    public BaremeExploitationController(IMapper mapper, IParametreManager parametreMgr, IUniteManager uniteMgr)
    {
      this.mapper = mapper;
      this.parametreMgr = parametreMgr;
      this.uniteMgr = uniteMgr;
    }

    /// <summary>
    /// Méthode de rafraichissement de session.
    /// </summary>
    /// <returns>Une réponse http.</returns>
    [HttpGet]
    [Route("api/BaremeExploitation/RefreshSession")]
    public HttpResponseMessage RefreshSession()
    {
      return Get(() => true);
    }

    /// <summary>
    /// Méthode GET de récupération des valeurs par défaut.
    /// </summary>
    /// <returns>Une réponse http.</returns>
    [HttpGet]
    [Route("api/BaremeExploitation/GetValeurParDefaut")]
    public HttpResponseMessage GetValeurParDefaut()
    {
      return Get(() =>
      {
        return new BaremeExploitationValeurParDefautModel()
        {
          Prix = parametreMgr.GetBaremeExploitationPrixDefaut(),
          Unite = this.mapper.Map<UniteModel>(uniteMgr.GetUnite(Constantes.CodeUnite.Heure)),
          PrixChauffeur = parametreMgr.GetBaremeExploitationPrixChauffeurDefaut()
        };
      });
    }
  }
}
