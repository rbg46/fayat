using Syncfusion.XlsIO;
using System;

namespace Fred.Framework
{
    /// <summary>
    ///   Helper du manager explorateur de dépenses
    /// </summary>
    public static class CompteExploitationExcelHelper
    {
        //100 pt to pouces = 1.38889 pouces : le shape de synfusion le height est de 100 par unité 
        private const double CoefPoucePoint =1.38;

        /// <summary>
        /// Renvoie la chaine Excel d'une "Range"
        /// correction formatée
        /// </summary>
        /// <param name="colStart">Lettre colonne début</param>
        /// <param name="colEnd">Lettre colonne fin</param>
        /// <param name="startRowNum">Num ligne de départ</param>
        /// <param name="endRowNum">Num ligne de fin</param>
        /// <returns>La range formée</returns>
        public static string GetFormatedExcelRange(string colStart, string colEnd, int startRowNum, int? endRowNum = null)
        {
            return GetFormatedExcelRange(colStart, colEnd, startRowNum.ToString(), endRowNum != null ? endRowNum.ToString() : startRowNum.ToString());
        }

        /// <summary>
        /// Renvoie la chaine Excel d'une "Range"
        /// correction formatée
        /// </summary>
        /// <param name="colStart">Lettre colonne début</param>
        /// <param name="colEnd">Lettre colonne fin</param>
        /// <param name="startRowNum">Num ligne de départ</param>
        /// <param name="endRowNum">Num ligne de fin</param>
        /// <returns>La range formée</returns>
        public static string GetFormatedExcelRange(string colStart, string colEnd, string startRowNum, string endRowNum = null)
        {
            return colStart + startRowNum + ":" + colEnd + (endRowNum ?? startRowNum);
        }

        /// <summary>
        /// Traitement des images logo de société pour forcer la hauteur et largeur selon l'image physique
        /// </summary>
        /// <param name="imagePath">Path Image Societe</param>
        /// <param name="worksheet">Worksheet Excel</param>
        public static void HandleSocieteLogoOnExcel(string imagePath, IWorksheet worksheet)
        {
            if (imagePath != null)
            {
                string startupPath = AppDomain.CurrentDomain.BaseDirectory;

                IPictureShape shape = worksheet.Pictures.AddPicture(1, 1, startupPath + imagePath);

                // Récupération de l'image logo physique pour fixer manuellement la hauteur et la largeur dans le Excel
                using (System.Drawing.Image logoPNG = System.Drawing.Image.FromFile(startupPath + imagePath))
                {
                    shape.Height = (int)(worksheet.Rows[0].RowHeight * CoefPoucePoint);
                    shape.Width = logoPNG.Width;
                }
                shape.IsSizeWithCell = true;
            }
        }
    }
}
