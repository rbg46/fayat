using System;
using System.Collections.Generic;
using Fred.Business.CompteExploitation.Excel13C4C.Helpers;
using Fred.Business.CompteExploitation.Excel13C4C.Models;
using Fred.Web.Shared.Models.Budget.Recette;

namespace Fred.Business.CompteExploitation.Excel13C4C.Calculators
{
    public class FraisGenerauxTotalsCalculator
    {
        public Result13C GetComputedYearForFraixGeneraux13C(List<PeriodAvancementRecetteLoadModel> periodAvancementRecetteLoadModels, int period)
        {
            if (periodAvancementRecetteLoadModels == null)
                throw new ArgumentNullException(nameof(periodAvancementRecetteLoadModels));

            if (periodAvancementRecetteLoadModels.Count < 13)
                throw new ArgumentNullException(nameof(periodAvancementRecetteLoadModels));

            var result = new Result13C();
            var helper = new AvancementRecetteTimeHelper();
            var commonCalculator = new FraixGenerauxCalculatorHelper();

            var avancementRecetteLoadModelMoins1 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 12);
            var avancementRecetteLoadModel = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 11);//juillet
            var avancementRecetteLoadModel1 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 10);//aout
            var avancementRecetteLoadModel2 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 9);//sep
            var avancementRecetteLoadModel3 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 8);//oct
            var avancementRecetteLoadModel4 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 7);//nov
            var avancementRecetteLoadModel5 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 6);//dec
            var avancementRecetteLoadModel6 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 5);//janv
            var avancementRecetteLoadModel7 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 4);//fev
            var avancementRecetteLoadModel8 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 3);//mars
            var avancementRecetteLoadModel9 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 2);//avr
            var avancementRecetteLoadModel10 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 1);//mai
            var avancementRecetteLoadModel11 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, substractMonth: 0);//juin


            result.MontantM = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel, avancementRecetteLoadModelMoins1);
            result.MontantM1 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel1, avancementRecetteLoadModel);
            result.MontantM2 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel2, avancementRecetteLoadModel1);
            result.MontantM3 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel3, avancementRecetteLoadModel2);
            result.MontantM4 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel4, avancementRecetteLoadModel3);
            result.MontantM5 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel5, avancementRecetteLoadModel4);
            result.MontantM6 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel6, avancementRecetteLoadModel5);
            result.MontantM7 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel7, avancementRecetteLoadModel6);
            result.MontantM8 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel8, avancementRecetteLoadModel7);
            result.MontantM9 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel9, avancementRecetteLoadModel8);
            result.MontantM10 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel10, avancementRecetteLoadModel9);
            result.MontantM11 = commonCalculator.GetDiffMontantFraixGenerauxForMonth(avancementRecetteLoadModel11, avancementRecetteLoadModel10);

            result.MontantCumul = commonCalculator.GetMontantFraixGenerauxForMonth(avancementRecetteLoadModel11);


            return result;


        }

        public Result4C GetComputedMonthsForaixGeneraux4C(List<PeriodAvancementRecetteLoadModel> periodAvancementRecetteLoadModels, int period)
        {
            if (periodAvancementRecetteLoadModels == null)
                throw new ArgumentNullException(nameof(periodAvancementRecetteLoadModels));

            if (periodAvancementRecetteLoadModels.Count < 2)
                throw new ArgumentNullException(nameof(periodAvancementRecetteLoadModels));

            var result = new Result4C();
            var helper = new AvancementRecetteTimeHelper();
            var commonCalculator = new FraixGenerauxCalculatorHelper();



            var avancementRecetteLoadModelM1 = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, 1);//avr 2020
            var avancementRecetteLoadModelM = helper.GetAvancementRecetteForPeriod(periodAvancementRecetteLoadModels, period, 0);//may 2020

            result.MontantCumulM = commonCalculator.GetMontantFraixGenerauxForMonth(avancementRecetteLoadModelM);
            result.MontantCumulM1 = commonCalculator.GetMontantFraixGenerauxForMonth(avancementRecetteLoadModelM1);
            result.MontantM = result.MontantCumulM - result.MontantCumulM1;

            return result;

        }

    }
}
