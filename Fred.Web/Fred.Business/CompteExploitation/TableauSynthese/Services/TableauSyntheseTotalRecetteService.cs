using Fred.Business.CompteExploitation.TableauSynthese.Interfaces;
using Fred.Web.Shared.Models.Budget.Recette;

namespace Fred.Business.CompteExploitation.TableauSynthese.Services
{
    public class TableauSyntheseTotalRecetteService : ITableauSyntheseTotalRecetteService
    {

        public decimal GetTotalRecetteBudget(AvancementRecetteLoadModel avancementRecette)
        {
            if (avancementRecette == null)
                return 0;

            decimal MontantMarche = avancementRecette.BudgetRecette?.MontantMarche ?? 0;
            decimal BudgetMontantAvenants = avancementRecette.BudgetRecette?.MontantAvenants ?? 0;
            decimal BudgetSommeAValoir = avancementRecette.BudgetRecette?.SommeAValoir ?? 0;
            decimal TravauxSupplementaires = avancementRecette.BudgetRecette?.TravauxSupplementaires ?? 0;
            decimal Revision = avancementRecette.BudgetRecette?.Revision ?? 0;
            decimal AutresRecettes = avancementRecette.BudgetRecette?.AutresRecettes ?? 0;
            decimal PenalitesEtRetenues = avancementRecette.BudgetRecette?.PenalitesEtRetenues ?? 0;

            return MontantMarche + BudgetMontantAvenants + BudgetSommeAValoir + TravauxSupplementaires + Revision + AutresRecettes + PenalitesEtRetenues;
        }

        public decimal GetTotalRecetteComptabilise(AvancementRecetteLoadModel avancementRecette)
        {
            if (avancementRecette == null)
                return 0;
            var MoisMontantMarche = avancementRecette.MontantMarche;
            var MoisMontantAvenants = avancementRecette.MontantAvenants;
            var MoisSommeAValoir = avancementRecette.SommeAValoir;
            var MoisRevision = avancementRecette.Revision;
            var MoisTravauxSupplementaires = avancementRecette.TravauxSupplementaires;
            var MoisAutresRecettes = avancementRecette.AutresRecettes;
            var MoisPenalitesEtRetenues = avancementRecette.PenalitesEtRetenues;

            return MoisMontantMarche + MoisMontantAvenants + MoisSommeAValoir + MoisRevision + MoisTravauxSupplementaires + MoisAutresRecettes + MoisPenalitesEtRetenues;
        }

        public decimal GetTotalRecetteCorrectif(AvancementRecetteLoadModel avancementRecette)
        {
            return avancementRecette.Correctif;
        }

        public decimal GetTotalRecetteActualisationFDC(AvancementRecetteLoadModel avancementRecette)
        {
            if (avancementRecette == null)
                return 0;

            decimal ajustementFdcMontantMarche = avancementRecette.MontantMarchePFA;
            decimal ajustementFdcMontantAvenants = avancementRecette.MontantAvenantsPFA;
            decimal ajustementFdcSommeAValoir = avancementRecette.SommeAValoirPFA;
            decimal ajustementFdcRevision = avancementRecette.RevisionPFA;
            decimal ajustementFdcTravauxSupplementaires = avancementRecette.TravauxSupplementairesPFA;
            decimal ajustementFdcAutresRecettes = avancementRecette.AutresRecettesPFA;
            decimal ajustementFdcPenalitesEtRetenues = avancementRecette.PenalitesEtRetenuesPFA;

            return ajustementFdcMontantMarche + ajustementFdcMontantAvenants + ajustementFdcSommeAValoir +
                ajustementFdcTravauxSupplementaires + ajustementFdcRevision + ajustementFdcAutresRecettes + ajustementFdcPenalitesEtRetenues;
        }
    }
}
