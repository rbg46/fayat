using Fred.Entities.Bareme;
using Fred.Web.Shared.Models.Bareme;
using System;
using System.Collections.Generic;

namespace Fred.Business.BaremeExploitation
{
    /// <summary>
    /// Gestionnaire des surcharges et exceptions des barème exploitation CI.
    /// </summary>
    public interface IBaremeExploitationCISurchargeManager : IManager<SurchargeBaremeExploitationCIEnt>
    {
        /// <summary>
        /// Retourne la liste des surcharges et exceptions d'un barème exploitation CI en fonction d'une période et d'un CI.
        /// </summary>
        /// <param name="periode">Periode</param>
        /// <param name="ciId">Identifiant du CI</param>
        /// <returns>Liste des surcharges et exceptions du barème exploitation CI</returns>
        List<SurchargeBaremeExploitationCIEnt> GetSurchargesByPeriodeAndCIId(DateTime periode, int ciId);

        /// <summary>
        /// Gère l'enregistrement des surcharges et exceptions des barèmes exploitation CI.
        /// </summary>
        /// <param name="saveMode">Le mode d'enregistrement</param>
        /// <param name="bareme">Barèmes des ressources / surcharges et exceptions à enregistrer</param>
        /// <param name="dernierePeriodeComptableCloturee">Dernière période comptable clôturée ou null s'il n'y en a pas</param>
        /// <param name="periodeDebutBaremeCourant">Période de début du barème courant en BDD</param>
        /// <param name="userId">Identifiant utilisateur</param>
        /// <param name="utcNow">La date / heure courante</param>
        /// <returns>La liste des surcharges et exceptions ajoutées pour mise à jour de la vue, null si le bareme de la période précédente a été clôturé</returns>
        List<BaremeExploitationCISurchargeAddedModel> Save(
          BaremeExploitationCIManager.SaveMode saveMode,
          BaremeExploitationCIToUpdateModel bareme,
          DateTime? dernierePeriodeComptableCloturee,
          DateTime? periodeDebutBaremeCourant,
          int userId,
          DateTime utcNow);

        /// <summary>
        /// Retourne l'historique d'une surcharge ou d'une exception.
        /// </summary>
        /// <param name="ciId">L'identifiant du CI.</param>
        /// <param name="referentielEtenduId">L'identifiant du référentiel étendu.</param>
        /// <param name="personnelId">L'identifiant du personnel pour une ressource de type personnel, sinon null</param>
        /// <param name="materielId">L'identifiant du matériel pour une ressource de type matériel, sinon null</param>
        /// <returns>L'historique de la surcharge ou de l'exception.</returns>
        List<SurchargeBaremeExploitationCIEnt> GetHistorique(int ciId, int referentielEtenduId, int? personnelId, int? materielId);
    }
}
