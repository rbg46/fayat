//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Fred.ImportExport.DataAccess.ExternalService.ExportMoyenPointageProxy
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "intfwsGestionMoyenEndpoint0Binding", Namespace = "http://www.fayatit.com/FRED-TIBCO/Interfaces/GestionMoyen")]
    public partial class intfGestionMoyenservice : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GestionMoyenOpOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public intfGestionMoyenservice()
        {
            this.Url = global::Fred.ImportExport.DataAccess.ExternalService.Properties.Settings.Default.Fred_ImportExport_DataAccess_ExternalService_ExportMoyenPointageProxy_intfGestionMoyen_service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event GestionMoyenOpCompletedEventHandler GestionMoyenOpCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("/BusinessProcesses/Interfaces/GestionMoyen/intfGestionMoyen-service.serviceagent/" +
            "intfwsGestionMoyenEndpoint0/GestionMoyenOp", RequestElementName = "GestionMoyenIn", RequestNamespace = "http://www.tibco.com/schemas/Compta.FRED.IO.BW/BusinessProcesses/SubProcesses/Ges" +
            "tionMoyen/GestionMoyenIn.xsd", ResponseElementName = "GestionMoyenOut", ResponseNamespace = "http://www.tibco.com/schemas/Compta.FRED.IO.BW/BusinessProcesses/SubProcesses/Ges" +
            "tionMoyen/GestionMoyenOut.xsd", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Code")]
        public string GestionMoyenOp([System.Xml.Serialization.XmlElementAttribute("Record")] GestionMoyenInRecord[] Record, out string Message)
        {
            object[] results = this.Invoke("GestionMoyenOp", new object[] {
                        Record});
            Message = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GestionMoyenOpAsync(GestionMoyenInRecord[] Record)
        {
            this.GestionMoyenOpAsync(Record, null);
        }

        /// <remarks/>
        public void GestionMoyenOpAsync(GestionMoyenInRecord[] Record, object userState)
        {
            if ((this.GestionMoyenOpOperationCompleted == null))
            {
                this.GestionMoyenOpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGestionMoyenOpOperationCompleted);
            }
            this.InvokeAsync("GestionMoyenOp", new object[] {
                        Record}, this.GestionMoyenOpOperationCompleted, userState);
        }

        private void OnGestionMoyenOpOperationCompleted(object arg)
        {
            if ((this.GestionMoyenOpCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GestionMoyenOpCompleted(this, new GestionMoyenOpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.tibco.com/schemas/Compta.FRED.IO.BW/BusinessProcesses/SubProcesses/Ges" +
        "tionMoyen/GestionMoyenIn.xsd")]
    public partial class GestionMoyenInRecord
    {

        private string anneeField;

        private string moisField;

        private string societeCodeField;

        private string etablissementComptableCodeField;

        private string moyenCodeField;

        private string immatriculationField;

        private string commentaireField;

        private string conducteurSocieteField;

        private string conducteurMatriculeField;

        private string conducteurNomField;

        private string conducteurPrenomField;

        private string societeCiField;

        private string etablissementComptableCiField;

        private string ciCodeField;

        private string personnelSocieteField;

        private string personnelMatriculeField;

        private string personnelNomField;

        private string personnelPrenomField;

        private System.DateTime datePointageField;

        private double quantiteField;

        private string uniteField;

        /// <remarks/>
        public string Annee
        {
            get
            {
                return this.anneeField;
            }
            set
            {
                this.anneeField = value;
            }
        }

        /// <remarks/>
        public string Mois
        {
            get
            {
                return this.moisField;
            }
            set
            {
                this.moisField = value;
            }
        }

        /// <remarks/>
        public string SocieteCode
        {
            get
            {
                return this.societeCodeField;
            }
            set
            {
                this.societeCodeField = value;
            }
        }

        /// <remarks/>
        public string EtablissementComptableCode
        {
            get
            {
                return this.etablissementComptableCodeField;
            }
            set
            {
                this.etablissementComptableCodeField = value;
            }
        }

        /// <remarks/>
        public string MoyenCode
        {
            get
            {
                return this.moyenCodeField;
            }
            set
            {
                this.moyenCodeField = value;
            }
        }

        /// <remarks/>
        public string Immatriculation
        {
            get
            {
                return this.immatriculationField;
            }
            set
            {
                this.immatriculationField = value;
            }
        }

        /// <remarks/>
        public string Commentaire
        {
            get
            {
                return this.commentaireField;
            }
            set
            {
                this.commentaireField = value;
            }
        }

        /// <remarks/>
        public string ConducteurSociete
        {
            get
            {
                return this.conducteurSocieteField;
            }
            set
            {
                this.conducteurSocieteField = value;
            }
        }

        /// <remarks/>
        public string ConducteurMatricule
        {
            get
            {
                return this.conducteurMatriculeField;
            }
            set
            {
                this.conducteurMatriculeField = value;
            }
        }

        /// <remarks/>
        public string ConducteurNom
        {
            get
            {
                return this.conducteurNomField;
            }
            set
            {
                this.conducteurNomField = value;
            }
        }

        /// <remarks/>
        public string ConducteurPrenom
        {
            get
            {
                return this.conducteurPrenomField;
            }
            set
            {
                this.conducteurPrenomField = value;
            }
        }

        /// <remarks/>
        public string SocieteCi
        {
            get
            {
                return this.societeCiField;
            }
            set
            {
                this.societeCiField = value;
            }
        }

        /// <remarks/>
        public string EtablissementComptableCi
        {
            get
            {
                return this.etablissementComptableCiField;
            }
            set
            {
                this.etablissementComptableCiField = value;
            }
        }

        /// <remarks/>
        public string CiCode
        {
            get
            {
                return this.ciCodeField;
            }
            set
            {
                this.ciCodeField = value;
            }
        }

        /// <remarks/>
        public string PersonnelSociete
        {
            get
            {
                return this.personnelSocieteField;
            }
            set
            {
                this.personnelSocieteField = value;
            }
        }

        /// <remarks/>
        public string PersonnelMatricule
        {
            get
            {
                return this.personnelMatriculeField;
            }
            set
            {
                this.personnelMatriculeField = value;
            }
        }

        /// <remarks/>
        public string PersonnelNom
        {
            get
            {
                return this.personnelNomField;
            }
            set
            {
                this.personnelNomField = value;
            }
        }

        /// <remarks/>
        public string PersonnelPrenom
        {
            get
            {
                return this.personnelPrenomField;
            }
            set
            {
                this.personnelPrenomField = value;
            }
        }

        /// <remarks/>
        public System.DateTime DatePointage
        {
            get
            {
                return this.datePointageField;
            }
            set
            {
                this.datePointageField = value;
            }
        }

        /// <remarks/>
        public double Quantite
        {
            get
            {
                return this.quantiteField;
            }
            set
            {
                this.quantiteField = value;
            }
        }

        /// <remarks/>
        public string Unite
        {
            get
            {
                return this.uniteField;
            }
            set
            {
                this.uniteField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GestionMoyenOpCompletedEventHandler(object sender, GestionMoyenOpCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GestionMoyenOpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GestionMoyenOpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591
