using Fred.Business.Action;
using Fred.Business.Action.CommandeLigne;
using Fred.Business.Budget.BudgetComparaison;
using Fred.Business.Budget.BudgetManager.Services;
using Fred.Business.Budget.Recette;
using Fred.Business.CI.Services;
using Fred.Business.CI.Services.Interfaces;
using Fred.Business.Commande;
using Fred.Business.Commande.Reporting;
using Fred.Business.Commande.Services;
using Fred.Business.CommandeEnergies;
using Fred.Business.Common.ExportDocument;
using Fred.Business.DatesClotureComptable.Services;
using Fred.Business.DatesClotureComptable.Services.Valorisations;
using Fred.Business.Depense;
using Fred.Business.Depense.Services;
using Fred.Business.Email.ActivitySummary;
using Fred.Business.GroupeFeature.Services;
using Fred.Business.Moyen;
using Fred.Business.Moyen.Features;
using Fred.Business.OperationDiverse.ImportODfromExcel.ContextProvider;
using Fred.Business.OperationDiverse.ImportODfromExcel.ExcelDataExtractor;
using Fred.Business.OperationDiverse.ImportODfromExcel.Mapper;
using Fred.Business.OperationDiverse.ImportODfromExcel.Validators;
using Fred.Business.OperationDiverse.Service;
using Fred.Business.Organisation.Tree;
using Fred.Business.OrganisationFeature;
using Fred.Business.Personnel;
using Fred.Business.Personnel.Mapper;
using Fred.Business.PieceJointe.Services;
using Fred.Business.Rapport.Duplication;
using Fred.Business.Rapport.Pointage;
using Fred.Business.Rapport.Pointage.Duplication;
using Fred.Business.Rapport.Pointage.FredIe;
using Fred.Business.Reception.FredIe;
using Fred.Business.Reception.Services;
using Fred.Business.Referential.Service;
using Fred.Business.RepriseDonnees.Ci.ContextProviders;
using Fred.Business.RepriseDonnees.Ci.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.Ci.Mapper;
using Fred.Business.RepriseDonnees.Ci.Selector;
using Fred.Business.RepriseDonnees.Ci.Validators;
using Fred.Business.RepriseDonnees.Commande.ContextProviders;
using Fred.Business.RepriseDonnees.Commande.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.Commande.Mapper;
using Fred.Business.RepriseDonnees.Commande.Validators;
using Fred.Business.RepriseDonnees.IndemniteDeplacement.ContextProviders;
using Fred.Business.RepriseDonnees.IndemniteDeplacement.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.IndemniteDeplacement.Mapper;
using Fred.Business.RepriseDonnees.IndemniteDeplacement.Validators;
using Fred.Business.RepriseDonnees.Materiel.ContextProviders;
using Fred.Business.RepriseDonnees.Materiel.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.Materiel.Mapper;
using Fred.Business.RepriseDonnees.Materiel.Validators;
using Fred.Business.RepriseDonnees.Personnel.ContextProdivers;
using Fred.Business.RepriseDonnees.Personnel.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.Personnel.Mapper;
using Fred.Business.RepriseDonnees.Personnel.Validators;
using Fred.Business.RepriseDonnees.PlanTaches.ContextProviders;
using Fred.Business.RepriseDonnees.PlanTaches.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.PlanTaches.Mapper;
using Fred.Business.RepriseDonnees.PlanTaches.Validators;
using Fred.Business.RepriseDonnees.Rapport.ContextProviders;
using Fred.Business.RepriseDonnees.Rapport.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.Rapport.Mapper;
using Fred.Business.RepriseDonnees.Rapport.Validators;
using Fred.Business.RepriseDonnees.ValidationCommande.ContextProviders;
using Fred.Business.RepriseDonnees.ValidationCommande.ExcelDataExtractor;
using Fred.Business.RepriseDonnees.ValidationCommande.Mapper;
using Fred.Business.RepriseDonnees.ValidationCommande.Validators;
using Fred.Business.SeuilValidation.Services;
using Fred.Business.SeuilValidation.Services.Interfaces;
using Fred.Business.Societe;
using Fred.Business.Valorisation.Services;
using Fred.ImportExport.Business.Personnel;

namespace Fred.DesignPatterns.DI.Services
{
    public class ServicesRegistrar : DependencyRegistrar
    {
        public ServicesRegistrar(IDependencyInjectionService dependencyInjectionService) : base(dependencyInjectionService) { }

        public override void RegisterTypes()
        {
            DependencyInjectionService.RegisterType<IActionCommandeLigneService, ActionCommandeLigneService>();
            DependencyInjectionService.RegisterType<IActivitySummaryService, ActivitySummaryService>();
            DependencyInjectionService.RegisterType<IAffectationToExcelModelMapper, AffectationToExcelModelMapper>();
            DependencyInjectionService.RegisterType<IBudgetComparaisonReferentialService, BudgetComparaisonReferentialService>();
            DependencyInjectionService.RegisterType<ICiContextProvider, CiContextProvider>();
            DependencyInjectionService.RegisterType<ICiDataMapper, CiDataMapper>();
            DependencyInjectionService.RegisterType<ICiExtractorService, CiExtractorService>();
            DependencyInjectionService.RegisterType<ICisAccessiblesService, CisAccessiblesService>();
            DependencyInjectionService.RegisterType<ICiSelectorService, CiSelectorService>();
            DependencyInjectionService.RegisterType<ICommandeContextProvider, CommandeContextProvider>();
            DependencyInjectionService.RegisterType<ICommandeDataMapper, CommandeDataMapper>();
            DependencyInjectionService.RegisterType<ICommandeEnergieLigneService, CommandeEnergieLigneService>();
            DependencyInjectionService.RegisterType<ICommandeEnergieMapperService, CommandeEnergieMapperService>();
            DependencyInjectionService.RegisterType<ICommandeEnergieService, CommandeEnergieService>();
            DependencyInjectionService.RegisterType<ICommandeExportExcelService, CommandeExportExcelService>();
            DependencyInjectionService.RegisterType<ICommandeExportService, CommandeExportService>();
            DependencyInjectionService.RegisterType<ICommandeExtractorService, CommandeExtractorService>();
            DependencyInjectionService.RegisterType<ICommandeFluxService, CommandeFluxService>();
            DependencyInjectionService.RegisterType<ICommandeHistoriqueService, CommandeHistoriqueService>();
            DependencyInjectionService.RegisterType<ICommandeImportExportExcelService, CommandeImportExportExcelService>();
            DependencyInjectionService.RegisterType<ICommandeValidationRequestService, CommandeValidationRequestService>();
            DependencyInjectionService.RegisterType<ICommandeValidatorService, CommandeValidatorService>();
            DependencyInjectionService.RegisterType<ICommandeLigneLockingService, CommandeLigneLockingService>();
            DependencyInjectionService.RegisterType<IDatesProviderForReceptionService, DatesProviderForReceptionService>();
            DependencyInjectionService.RegisterType<IDateTransfertFarProviderService, DateTransfertFarProviderService>();
            DependencyInjectionService.RegisterType<IDepenseAchatService, DepenseAchatService>();
            DependencyInjectionService.RegisterType<IDepenseServiceMediator, DepenseServiceMediator>();
            DependencyInjectionService.RegisterType<IEmailGeneratorService, EmailGeneratorService>();
            DependencyInjectionService.RegisterType<IExportDocumentService, ExportDocumentService>();
            DependencyInjectionService.RegisterType<IFacturationEtablissementSelectorService, FacturationEtablissementSelectorService>();
            DependencyInjectionService.RegisterType<IFournisseursImportService, FournisseursImportService>();
            DependencyInjectionService.RegisterType<IFredIePointageFluxService, FredIePointageFluxService>();
            DependencyInjectionService.RegisterType<IGroupeFeatureService, GroupeFeatureService>();
            DependencyInjectionService.RegisterType<IImportODValidatorService, ImportODValidatorService>();
            DependencyInjectionService.RegisterType<IIndemniteDeplacementContextProvider, IndemniteDeplacementContextProvider>();
            DependencyInjectionService.RegisterType<IIndemniteDeplacementDataMapper, IndemniteDeplacementDataMapper>();
            DependencyInjectionService.RegisterType<IIndemniteDeplacementExtractorService, IndemniteDeplacementExtractorService>();
            DependencyInjectionService.RegisterType<IIndemniteDeplacementValidatorService, IndemniteDeplacementValidatorService>();
            DependencyInjectionService.RegisterType<IMaterielContextProvider, MaterielContextProvider>();
            DependencyInjectionService.RegisterType<IMaterielDataMapper, MaterielDataMapper>();
            DependencyInjectionService.RegisterType<IMaterielExtractorService, MaterielExtractorService>();
            DependencyInjectionService.RegisterType<IMaterielValidatorService, MaterielValidatorService>();
            DependencyInjectionService.RegisterType<IODContextProvider, ODContextProvider>();
            DependencyInjectionService.RegisterType<IOdExtractorService, OdExtractorService>();
            DependencyInjectionService.RegisterType<IOperationDiverseDataMapper, OperationDiverseDataMapper>();
            DependencyInjectionService.RegisterType<IOperationDiverseExcelService, OperationDiverseExcelService>();
            DependencyInjectionService.RegisterType<IOrganisationRelatedFeatureService, OrganisationRelatedFeatureService>();
            DependencyInjectionService.RegisterType<IOrganisationTreeService, OrganisationTreeService>();
            DependencyInjectionService.RegisterType<IPaysSelectorService, PaysSelectorService>();
            DependencyInjectionService.RegisterType<IPersonnelContextProvider, PersonnelContextProvider>();
            DependencyInjectionService.RegisterType<IPersonnelDataMapper, PersonnelDataMapper>();
            DependencyInjectionService.RegisterType<IPersonnelExtractorService, PersonnelExtractorService>();
            DependencyInjectionService.RegisterType<IPersonnelFluxTibcoSystemService, PersonnelFluxTibcoSystemService>();
            DependencyInjectionService.RegisterType<IPersonnelSelectorService, PersonnelSelectorService>();
            DependencyInjectionService.RegisterType<IPersonnelValidatorService, PersonnelValidatorService>();
            DependencyInjectionService.RegisterType<IPieceJointeService, PieceJointeService>();
            DependencyInjectionService.RegisterType<IPlanTachesContextProvider, PlanTachesContextProvider>();
            DependencyInjectionService.RegisterType<IPlanTachesDataMapper, PlanTachesDataMapper>();
            DependencyInjectionService.RegisterType<IPlanTachesExtractorService, PlanTachesExtractorService>();
            DependencyInjectionService.RegisterType<IPlanTachesValidatorService, PlanTachesValidatorService>();
            DependencyInjectionService.RegisterType<IPremierePeriodeComptableNonClotureeService, PremierePeriodeComptableNonClotureeService>();
            DependencyInjectionService.RegisterType<IPointageDuplicatorService, PointageDuplicatorService>();
            DependencyInjectionService.RegisterType<IPointageSamediCongePayeService, PointageSamediCongePayeService>();
            DependencyInjectionService.RegisterType<IRapportContextProvider, RapportContextProvider>();
            DependencyInjectionService.RegisterType<IRapportDataMapper, RapportDataMapper>();
            DependencyInjectionService.RegisterType<IRapportDuplicationService, RapportDuplicationService>();
            DependencyInjectionService.RegisterType<IRapportDuplicationNewCiService, RapportDuplicationNewCiService>();
            DependencyInjectionService.RegisterType<IRapportExtractorService, RapportExtractorService>();
            DependencyInjectionService.RegisterType<IRapportMoyenExtractionService, RapportMoyenExtractionService>();
            DependencyInjectionService.RegisterType<IRapportMoyenService, RapportMoyenService>();
            DependencyInjectionService.RegisterType<IReceptionBlockedService, ReceptionBlockedService>();
            DependencyInjectionService.RegisterType<IReceptionCreatorService, ReceptionCreatorService>();
            DependencyInjectionService.RegisterType<IReceptionExportExcelService, ReceptionExportExcelService>();
            DependencyInjectionService.RegisterType<IReceptionFilterCiProvider, ReceptionFilterCiProvider>();
            DependencyInjectionService.RegisterType<IReceptionNatureProviderService, ReceptionNatureProviderService>();
            DependencyInjectionService.RegisterType<IReceptionSapProviderService, ReceptionSapProviderService>();
            DependencyInjectionService.RegisterType<IReceptionUpdateOrchestrator, ReceptionUpdateOrchestrator>();
            DependencyInjectionService.RegisterType<IReceptionsAutomaticGenerator, ReceptionsAutomaticGenerator>();
            DependencyInjectionService.RegisterType<IReceptionsProviderWithFilterService, ReceptionsProviderWithFilterService>();
            DependencyInjectionService.RegisterType<IRemplacementTachesProviderService, RemplacementTachesProviderService>();
            DependencyInjectionService.RegisterType<IRepriseCiValidatorService, RepriseCiValidatorService>();
            DependencyInjectionService.RegisterType<IRepriseRapportValidatorService, RepriseRapportValidatorService>();
            DependencyInjectionService.RegisterType<IRoleValidsForPermissionService, RoleValidsForPermissionService>();
            DependencyInjectionService.RegisterType<ISearchCiService, SearchCiService>();
            DependencyInjectionService.RegisterType<ISearchCommandeService, SearchCommandeService>();
            DependencyInjectionService.RegisterType<ISearchReceptionsService, SearchReceptionsService>();
            DependencyInjectionService.RegisterType<ISepService, SepService>();
            DependencyInjectionService.RegisterType<ISeuilValidationsProviderForCiAnDeviseService, SeuilValidationsProviderForCiAnDeviseService>();
            DependencyInjectionService.RegisterType<IUpdatePointageMoyenInputBuilder, UpdatePointageMoyenInputBuilder>();
            DependencyInjectionService.RegisterType<IUtilisateursWithPermissionAndSeuilValidationProviderService, UtilisateursWithPermissionAndSeuilValidationProviderService>();
            DependencyInjectionService.RegisterType<IVisableReceptionProviderService, VisableReceptionProviderService>();
            DependencyInjectionService.RegisterType<IValidationCommandeContextProvider, ValidationCommandeContextProvider>();
            DependencyInjectionService.RegisterType<IValidationCommandeDataMapper, ValidationCommandeDataMapper>();
            DependencyInjectionService.RegisterType<IValidationCommandeExtractorService, ValidationCommandeExtractorService>();
            DependencyInjectionService.RegisterType<IValidationCommandeValidatorService, ValidationCommandeValidatorService>();
            DependencyInjectionService.RegisterType<IValorisationVerrouPeriodesService, ValorisationVerrouPeriodesService>();
            DependencyInjectionService.RegisterType<IZoneModifiableSelectorService, ZoneModifiableSelectorService>();
            DependencyInjectionService.RegisterType<IGeneralExpenseService, GeneralExpenseService>();
            DependencyInjectionService.RegisterType<IAvancementRecetteLoader, AvancementRecetteLoader>();
        }
    }
}
